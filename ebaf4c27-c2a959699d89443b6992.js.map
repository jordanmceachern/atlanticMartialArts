{"version":3,"file":"ebaf4c27-c2a959699d89443b6992.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/framer-motion.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar popmotion = require('popmotion');\nvar sync = require('framesync');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () {\n                        return e[k];\n                    }\n                });\n            }\n        });\n    }\n    n['default'] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar createDefinition = function (propNames) { return ({\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\n}); };\nvar featureDefinitions = {\n    measureLayout: createDefinition([\n        \"layout\",\n        \"layoutId\",\n        \"drag\",\n        \"_layoutResetTransform\",\n    ]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    layoutAnimation: createDefinition([\"layout\", \"layoutId\"]),\n};\nfunction loadFeatures(features) {\n    for (var key in features) {\n        var Component = features[key];\n        if (Component !== null)\n            featureDefinitions[key].Component = Component;\n    }\n}\n\nvar LazyContext = React.createContext({ strict: false });\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = React.useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        lazyContext.strict) {\n        heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React__namespace.createElement(Component, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\n/**\n * @public\n */\nvar MotionConfigContext = React.createContext({\n    transformPagePoint: function (p) { return p; },\n    isStatic: false,\n});\n\nvar MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nvar PresenceContext = React.createContext(null);\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    var ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useOpaqueId when released in React\n    var id = useUniqueId();\n    React.useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useUniqueId = function () { return useConstant(incrementId); };\n\n/**\n * @internal\n */\nvar LayoutGroupContext = React.createContext(null);\n\nvar isBrowser = typeof window !== \"undefined\";\n\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nfunction useLayoutId(_a) {\n    var layoutId = _a.layoutId;\n    var layoutGroupId = React.useContext(LayoutGroupContext);\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    var config = React.useContext(MotionConfigContext);\n    var lazyContext = React.useContext(LazyContext);\n    var parent = useVisualElementContext();\n    var presenceContext = React.useContext(PresenceContext);\n    var layoutId = useLayoutId(props);\n    var visualElementRef = React.useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState: visualState,\n            parent: parent,\n            props: tslib.__assign(tslib.__assign({}, props), { layoutId: layoutId }),\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n        });\n    }\n    var visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(function () {\n        if (!visualElement)\n            return;\n        visualElement.setProps(tslib.__assign(tslib.__assign(tslib.__assign({}, config), props), { layoutId: layoutId }));\n        visualElement.isPresent = isPresent(presenceContext);\n        visualElement.isPresenceRoot =\n            !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\n        /**\n         * Fire a render to ensure the latest state is reflected on-screen.\n         */\n        visualElement.syncRender();\n    });\n    React.useEffect(function () {\n        var _a;\n        if (!visualElement)\n            return;\n        /**\n         * In a future refactor we can replace the features-as-components and\n         * have this loop through them all firing \"effect\" listeners\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback(function (instance) {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity$1(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    return typeof definition === \"function\"\n        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)\n        : definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        var initial = props.initial, animate = props.animate;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props, isStatic) {\n    var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return React.useMemo(function () { return ({ initial: initial, animate: animate }); }, \n    /**\n     * Only break memoisation in static mode\n     */\n    isStatic\n        ? [\n            variantLabelsAsDependency(initial),\n            variantLabelsAsDependency(animate),\n        ]\n        : []);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\nfunction createMotionComponent(_a) {\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        var isStatic = React.useContext(MotionConfigContext).isStatic;\n        var features = null;\n        /**\n         * Create the tree context. This is memoized and will only trigger renders\n         * when the current tree variant changes in static mode.\n         */\n        var context = useCreateMotionContext(props, isStatic);\n        /**\n         *\n         */\n        var visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             *\n             * TODO: The intention is to move these away from a React-centric to a\n             * VisualElement-centric lifecycle scheme.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(React__namespace.Fragment, null,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)),\n            features));\n    }\n    return React.forwardRef(MotionComponent);\n}\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig) {\n        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    var componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: function (_target, key) {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nvar lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nvar valueScaleCorrection = {};\n/**\n * @internal\n */\nfunction addScaleCorrection(correctors) {\n    for (var key in correctors) {\n        valueScaleCorrection[key] = correctors[key];\n    }\n}\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n    return transformAxes.forEach(function (axesKey) {\n        return transformProps.push(operationKey + axesKey);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nfunction isForcedMotionValue(key, _a) {\n    var layout = _a.layout, layoutId = _a.layoutId;\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!valueScaleCorrection[key] || key === \"opacity\")));\n}\n\nvar isMotionValue = function (value) {\n    return value !== null && typeof value === \"object\" && value.getVelocity;\n};\n\nvar translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n    var transform = _a.transform, transformKeys = _a.transformKeys;\n    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\n    // The transform string we're going to build into.\n    var transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    var transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    else {\n        transformString = transformString.trim();\n    }\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin(_a) {\n    var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\n    return originX + \" \" + originY + \" \" + originZ;\n}\n\n/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable$1(key) {\n    return key.startsWith(\"--\");\n}\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round });\n\nvar numberValueTypes = {\n    // Border props\n    borderWidth: styleValueTypes.px,\n    borderTopWidth: styleValueTypes.px,\n    borderRightWidth: styleValueTypes.px,\n    borderBottomWidth: styleValueTypes.px,\n    borderLeftWidth: styleValueTypes.px,\n    borderRadius: styleValueTypes.px,\n    radius: styleValueTypes.px,\n    borderTopLeftRadius: styleValueTypes.px,\n    borderTopRightRadius: styleValueTypes.px,\n    borderBottomRightRadius: styleValueTypes.px,\n    borderBottomLeftRadius: styleValueTypes.px,\n    // Positioning props\n    width: styleValueTypes.px,\n    maxWidth: styleValueTypes.px,\n    height: styleValueTypes.px,\n    maxHeight: styleValueTypes.px,\n    size: styleValueTypes.px,\n    top: styleValueTypes.px,\n    right: styleValueTypes.px,\n    bottom: styleValueTypes.px,\n    left: styleValueTypes.px,\n    // Spacing props\n    padding: styleValueTypes.px,\n    paddingTop: styleValueTypes.px,\n    paddingRight: styleValueTypes.px,\n    paddingBottom: styleValueTypes.px,\n    paddingLeft: styleValueTypes.px,\n    margin: styleValueTypes.px,\n    marginTop: styleValueTypes.px,\n    marginRight: styleValueTypes.px,\n    marginBottom: styleValueTypes.px,\n    marginLeft: styleValueTypes.px,\n    // Transform props\n    rotate: styleValueTypes.degrees,\n    rotateX: styleValueTypes.degrees,\n    rotateY: styleValueTypes.degrees,\n    rotateZ: styleValueTypes.degrees,\n    scale: styleValueTypes.scale,\n    scaleX: styleValueTypes.scale,\n    scaleY: styleValueTypes.scale,\n    scaleZ: styleValueTypes.scale,\n    skew: styleValueTypes.degrees,\n    skewX: styleValueTypes.degrees,\n    skewY: styleValueTypes.degrees,\n    distance: styleValueTypes.px,\n    translateX: styleValueTypes.px,\n    translateY: styleValueTypes.px,\n    translateZ: styleValueTypes.px,\n    x: styleValueTypes.px,\n    y: styleValueTypes.px,\n    z: styleValueTypes.px,\n    perspective: styleValueTypes.px,\n    transformPerspective: styleValueTypes.px,\n    opacity: styleValueTypes.alpha,\n    originX: styleValueTypes.progressPercentage,\n    originY: styleValueTypes.progressPercentage,\n    originZ: styleValueTypes.px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: styleValueTypes.alpha,\n    strokeOpacity: styleValueTypes.alpha,\n    numOctaves: int,\n};\n\nfunction buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable$1(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            /**\n             * If layout projection is on, and we need to perform scale correction for this\n             * value type, perform it.\n             */\n            if ((projection === null || projection === void 0 ? void 0 : projection.isHydrated) &&\n                (layoutState === null || layoutState === void 0 ? void 0 : layoutState.isHydrated) &&\n                valueScaleCorrection[key]) {\n                var correctedValue = valueScaleCorrection[key].process(value, layoutState, projection);\n                /**\n                 * Scale-correctable values can define a number of other values to break\n                 * down into. For instance borderRadius needs applying to borderBottomLeftRadius etc\n                 */\n                var applyTo = valueScaleCorrection[key].applyTo;\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        style[applyTo[i]] = correctedValue;\n                    }\n                }\n                else {\n                    style[key] = correctedValue;\n                }\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (layoutState &&\n        projection &&\n        buildProjectionTransform &&\n        buildProjectionTransformOrigin) {\n        style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform : undefined);\n        if (transformTemplate) {\n            style.transform = transformTemplate(transform, style.transform);\n        }\n        style.transformOrigin = buildProjectionTransformOrigin(layoutState);\n    }\n    else {\n        if (hasTransform) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        if (hasTransformOrigin) {\n            style.transformOrigin = buildTransformOrigin(transformOrigin);\n        }\n    }\n}\n\nvar createHtmlRenderState = function () { return ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n}); };\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (var key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n    var transformTemplate = _a.transformTemplate;\n    return React.useMemo(function () {\n        var state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, undefined, undefined, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        var vars = state.vars, style = state.style;\n        return tslib.__assign(tslib.__assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    var styleProp = props.style || {};\n    var style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    var htmlProps = {};\n    var style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag)) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =\n            \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\n/**\n * A list of all valid MotionProps.\n *\n * @internalremarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nvar validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"_layoutResetTransform\",\n    \"onLayoutAnimationComplete\",\n    \"onViewportBoxUpdate\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\n    shouldForward = function (key) {\n        // Handle events explicitly as Emotion validates them all as true\n        if (key.startsWith(\"on\")) {\n            return !isValidMotionProp(key);\n        }\n        else {\n            return emotionIsPropValid_1(key);\n        }\n    };\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    var filteredProps = {};\n    for (var key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n    var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n    return pxOriginX + \" \" + pxOriginY;\n}\n\n// Convert a progress 0-1 to a pixels value based on the provided length\nvar progressToPixels = function (progress, length) {\n    return styleValueTypes.px.transform(progress * length);\n};\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = progressToPixels(-offset, totalLength);\n    // Build the dash array\n    var pathLength = progressToPixels(length, totalLength);\n    var pathSpacing = progressToPixels(spacing, totalLength);\n    attrs[keys.array] = pathLength + \" \" + pathSpacing;\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been measured\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nvar createSvgRenderState = function () { return (tslib.__assign(tslib.__assign({}, createHtmlRenderState()), { attrs: {} })); };\n\nfunction useSVGProps(props, visualState) {\n    var visualProps = React.useMemo(function () {\n        var state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return tslib.__assign(tslib.__assign({}, state.attrs), { style: tslib.__assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        var rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps) {\n    if (forwardMotionProps === void 0) { forwardMotionProps = false; }\n    var useRender = function (Component, props, ref, _a, isStatic) {\n        var latestValues = _a.latestValues;\n        var useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        var visualProps = useVisualProps(props, latestValues, isStatic);\n        var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        var elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), { ref: ref });\n        return React.createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nfunction renderHTML(element, _a) {\n    var style = _a.style, vars = _a.vars;\n    // Directly assign style into the Element's style prop. In tests Object.assign is the\n    // fastest way to assign styles.\n    Object.assign(element.style, style);\n    // Loop over any CSS variables and assign those.\n    for (var key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nvar camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n]);\n\nfunction renderSVG(element, renderState) {\n    renderHTML(element, renderState);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n    var style = props.style;\n    var newValues = {};\n    for (var key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n    var newValues = scrapeMotionValuesFromProps$1(props);\n    for (var key in props) {\n        if (isMotionValue(props[key])) {\n            var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nvar isKeyframesTarget = function (v) {\n    return Array.isArray(v);\n};\n\nvar isCustomValue = function (v) {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function (v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) { return function (props, isStatic) {\n    var context = React.useContext(MotionContext);\n    var presenceContext = React.useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(function () { return makeState(config, props, context, presenceContext); });\n}; };\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var variantToSet = blockInitialAnimation || initial === false ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target)\n                values[key] = target[key];\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nvar svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: function (props, instance, _a) {\n            var renderState = _a.renderState, latestValues = _a.latestValues;\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            if (isPath(instance)) {\n                renderState.totalPathLength = instance.getTotalLength();\n            }\n            buildSVGAttrs(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n            // TODO: Replace with direct assignment\n            renderSVG(instance, renderState);\n        },\n    }),\n};\nfunction isPath(element) {\n    return element.tagName === \"path\";\n}\n\nvar htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nfunction createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement) {\n    var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;\n    var baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return tslib.__assign(tslib.__assign({}, baseConfig), { preloadedFeatures: preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement: createVisualElement,\n        Component: Component });\n}\n\nvar AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler, options); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nfunction getViewportPointFromEvent(event) {\n    return extractEventInfo(event, \"client\");\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined);\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined);\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(function () { return function () { return callback(); }; }, []);\n}\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = React.useRef(false);\n    var cancelPointerEndListeners = React.useRef(null);\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp), addPointerEvent(window, \"pointercancel\", onPointerCancel));\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nvar gestureAnimations = {\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar easingLookup = {\n    linear: popmotion.linear,\n    easeIn: popmotion.easeIn,\n    easeInOut: popmotion.easeInOut,\n    easeOut: popmotion.easeOut,\n    circIn: popmotion.circIn,\n    circInOut: popmotion.circInOut,\n    circOut: popmotion.circOut,\n    backIn: popmotion.backIn,\n    backInOut: popmotion.backInOut,\n    backOut: popmotion.backOut,\n    anticipate: popmotion.anticipate,\n    bounceIn: popmotion.bounceIn,\n    bounceInOut: popmotion.bounceInOut,\n    bounceOut: popmotion.bounceOut,\n};\nvar easingDefinitionToFunction = function (definition) {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n        var _a = tslib.__read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n        return popmotion.cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\nvar isEasingArray = function (ease) {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nvar underDampedSpring = function () { return ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10,\n}); };\nvar criticallyDampedSpring = function (to) { return ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10,\n}); };\nvar linearTween = function () { return ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n}); };\nvar keyframes = function (values) { return ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values,\n}); };\nvar defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nvar getDefaultTransition = function (valueKey, to) {\n    var transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return tslib.__assign({ to: to }, transitionFactory(to));\n};\n\n/**\n * A map of default value types for common values\n */\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), { \n    // Color props\n    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, \n    // Border props\n    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    var defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== styleValueTypes.filter)\n        defaultValueType = styleValueTypes.complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    var options = tslib.__assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key) || {};\n    return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = tslib.__spreadArray([], tslib.__read(options.to));\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key);\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    var isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    var isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \\\"\" + target + \"\\\". \" + origin + \" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\n    function start() {\n        var options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete: onComplete,\n            onUpdate: function (v) { return value.set(v); },\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition))\n            : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: function () {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a;\n        value.set(target);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n        return { stop: function () { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n *\n * @internal\n */\nfunction startAnimation(key, value, target, transition) {\n    if (transition === void 0) { transition = {}; }\n    return value.start(function (onComplete) {\n        var delayTimer;\n        var controls;\n        var animation = getAnimation(key, value, target, transition, onComplete);\n        var delay = getDelayFromTransition(transition, key);\n        var start = function () { return (controls = animation()); };\n        if (delay) {\n            delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return function () {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\nfunction addUniqueItem(arr, item) {\n    arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n    var index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nvar SubscriptionManager = /** @class */ (function () {\n    function SubscriptionManager() {\n        this.subscriptions = [];\n    }\n    SubscriptionManager.prototype.add = function (handler) {\n        var _this = this;\n        addUniqueItem(this.subscriptions, handler);\n        return function () { return removeItem(_this.subscriptions, handler); };\n    };\n    SubscriptionManager.prototype.notify = function (a, b, c) {\n        var numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (var i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                var handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    };\n    SubscriptionManager.prototype.getSize = function () {\n        return this.subscriptions.length;\n    };\n    SubscriptionManager.prototype.clear = function () {\n        this.subscriptions.length = 0;\n    };\n    return SubscriptionManager;\n}());\n\nvar isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nvar MotionValue = /** @class */ (function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n        var _this = this;\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = function (v, render) {\n            if (render === void 0) { render = true; }\n            _this.prev = _this.current;\n            _this.current = v;\n            // Update timestamp\n            var _a = sync.getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\n            if (_this.lastUpdated !== timestamp) {\n                _this.timeDelta = delta;\n                _this.lastUpdated = timestamp;\n                sync__default['default'].postRender(_this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (_this.prev !== _this.current) {\n                _this.updateSubscribers.notify(_this.current);\n            }\n            // Update velocity subscribers\n            if (_this.velocityUpdateSubscribers.getSize()) {\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                _this.renderSubscribers.notify(_this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = function () { return sync__default['default'].postRender(_this.velocityCheck); };\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * @library\n     *\n     * ```jsx\n     * function MyComponent() {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <Frame x={x} />\n     * }\n     * ```\n     *\n     * @motion\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @internalremarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n        return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n        this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n        if (render === void 0) { render = true; }\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n        return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n        return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                popmotion.velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n        var _this = this;\n        this.stop();\n        return new Promise(function (resolve) {\n            _this.hasAnimated = true;\n            _this.stopAnimation = animation(resolve);\n        }).then(function () { return _this.clearAnimation(); });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n        return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n        this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    };\n    return MotionValue;\n}());\n/**\n * @internal\n */\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\n/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\n/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes)), [styleValueTypes.color, styleValueTypes.complex]);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved\n        ? visualElement.makeTargetAnimatable(resolved, false)\n        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels)).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" && isNumericalString(value)) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\n/**\n * @internal\n */\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart();\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = tslib.__read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var animation = startAnimation(key, value, valueTarget, tslib.__assign({ delay: delay }, transition));\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Focus,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder)).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = tslib.__assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev)) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: tslib.__assign({ type: type }, options),\n                }); }))));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        return animateChanges(options, type);\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction variantsHaveChanged(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], onExitComplete = _a[1];\n        var presenceContext = React.useContext(PresenceContext);\n        React.useEffect(function () {\n            var _a, _b;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n        }, [isPresent]);\n    }),\n};\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = popmotion.distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = sync.getFrameData().timestamp;\n            _this.history.push(tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync__default['default'].update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = sync.getFrameData().timestamp;\n        this.history = [tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        sync.cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nfunction noop(any) {\n    return any;\n}\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToAxisBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return {\n        top: y.min,\n        bottom: y.max,\n        left: x.min,\n        right: x.max,\n    };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoundingBox(_a, transformPoint) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    if (transformPoint === void 0) { transformPoint = noop; }\n    var topLeft = transformPoint({ x: left, y: top });\n    var bottomRight = transformPoint({ x: right, y: bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n/**\n * Create an empty axis box of zero size\n */\nfunction axisBox() {\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\n}\nfunction copyAxisBox(box) {\n    return {\n        x: tslib.__assign({}, box.x),\n        y: tslib.__assign({}, box.y),\n    };\n}\n/**\n * Create an empty box delta\n */\nvar zeroDelta = {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n};\nfunction delta() {\n    return {\n        x: tslib.__assign({}, zeroDelta),\n        y: tslib.__assign({}, zeroDelta),\n    };\n}\n\n// Call a handler once for each axis\nfunction eachAxis(handler) {\n    return [handler(\"x\"), handler(\"y\")];\n}\n\nvar clampProgress = function (v) { return popmotion.clamp(0, 1, v); };\n/**\n * Returns true if the provided value is within maxDistance of the provided target\n */\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return popmotion.distance(value, target) < maxDistance;\n}\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n    }\n    return clampProgress(origin);\n}\n/**\n * Update the AxisDelta with a transform that projects source into target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001))\n        delta.scale = 1;\n    delta.translate =\n        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate))\n        delta.translate = 0;\n}\n/**\n * Update the BoxDelta with a transform that projects the source into the target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateBoxDelta(delta, source, target, origin) {\n    updateAxisDelta(delta.x, source.x, target.x, defaultOrigin(origin.originX));\n    updateAxisDelta(delta.y, source.y, target.y, defaultOrigin(origin.originY));\n}\n/**\n * Currently this only accepts numerical origins, measured as 0-1, but could\n * accept pixel values by comparing to the target axis.\n */\nfunction defaultOrigin(origin) {\n    return typeof origin === \"number\" ? origin : 0.5;\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(projection, parentProjection) {\n    calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);\n    calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);\n}\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculates a min projection point based on a pointer, pointer progress\n * within the drag target, and constraints.\n *\n * For instance if an element was 100px width, we were dragging from 0.25\n * along this axis, the pointer is at 200px, and there were no constraints,\n * we would calculate a min projection point of 175px.\n */\nfunction calcConstrainedMinPoint(point, length, progress, constraints, elastic) {\n    // Calculate a min point for this axis and apply it to the current pointer\n    var min = point - length * progress;\n    return constraints ? applyConstraints(min, constraints, elastic) : min;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = tslib.__read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return {\n        min: layoutAxis.min + min,\n        max: layoutAxis.min + max,\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate the an axis position based on two axes and a progress value.\n */\nfunction calcPositionFromProgress(axis, constraints, progress) {\n    var axisLength = axis.max - axis.min;\n    var min = popmotion.mix(constraints.min, constraints.max - axisLength, progress);\n    return { min: min, max: min + axisLength };\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\n/**\n * Measure and return the element bounding box.\n *\n * We convert the box into an AxisBox2D to make it easier to work with each axis\n * individually and programmatically.\n *\n * This function optionally accepts a transformPagePoint function which allows us to compensate\n * for, for instance, measuring the element within a scaled plane like a Framer devivce preview component.\n */\nfunction getBoundingBox(element, transformPagePoint) {\n    var box = element.getBoundingClientRect();\n    return convertBoundingBoxToAxisBox(transformBoundingBox(box, transformPagePoint));\n}\n\nvar compareByDepth = function (a, b) {\n    return a.depth - b.depth;\n};\n\nfunction isProjecting(visualElement) {\n    var isEnabled = visualElement.projection.isEnabled;\n    return isEnabled || visualElement.shouldResetTransform();\n}\nfunction collectProjectingAncestors(visualElement, ancestors) {\n    if (ancestors === void 0) { ancestors = []; }\n    var parent = visualElement.parent;\n    if (parent)\n        collectProjectingAncestors(parent, ancestors);\n    if (isProjecting(visualElement))\n        ancestors.push(visualElement);\n    return ancestors;\n}\nfunction collectProjectingChildren(visualElement) {\n    var children = [];\n    var addChild = function (child) {\n        if (isProjecting(child))\n            children.push(child);\n        child.children.forEach(addChild);\n    };\n    visualElement.children.forEach(addChild);\n    return children.sort(compareByDepth);\n}\n/**\n * Update the layoutState by measuring the DOM layout. This\n * should be called after resetting any layout-affecting transforms.\n */\nfunction updateLayoutMeasurement(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    var layoutState = visualElement.getLayoutState();\n    visualElement.notifyBeforeLayoutMeasure(layoutState.layout);\n    layoutState.isHydrated = true;\n    layoutState.layout = visualElement.measureViewportBox();\n    layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\n    visualElement.notifyLayoutMeasure(layoutState.layout, visualElement.prevViewportBox || layoutState.layout);\n    sync__default['default'].update(function () { return visualElement.rebaseProjectionTarget(); });\n}\n/**\n * Record the viewport box as it was before an expected mutation/re-render\n */\nfunction snapshotViewportBox(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    visualElement.prevViewportBox = visualElement.measureViewportBox(false);\n    /**\n     * Update targetBox to match the prevViewportBox. This is just to ensure\n     * that targetBox is affected by scroll in the same way as the measured box\n     */\n    visualElement.rebaseProjectionTarget(false, visualElement.prevViewportBox);\n}\n\nfunction tweenAxis(target, prev, next, p) {\n    target.min = popmotion.mix(prev.min, next.min, p);\n    target.max = popmotion.mix(prev.max, next.max, p);\n}\nfunction calcRelativeOffsetAxis(parent, child) {\n    return {\n        min: child.min - parent.min,\n        max: child.max - parent.min,\n    };\n}\nfunction calcRelativeOffset(parent, child) {\n    return {\n        x: calcRelativeOffsetAxis(parent.x, child.x),\n        y: calcRelativeOffsetAxis(parent.y, child.y),\n    };\n}\nfunction checkIfParentHasChanged(prev, next) {\n    var prevId = prev.getLayoutId();\n    var nextId = next.getLayoutId();\n    return prevId !== nextId || (nextId === undefined && prev !== next);\n}\n\nfunction isDraggable(visualElement) {\n    var _a = visualElement.getProps(), drag = _a.drag, _dragX = _a._dragX;\n    return drag && !_dragX;\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetAxis(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetBox(box, originBox) {\n    resetAxis(box.x, originBox.x);\n    resetAxis(box.y, originBox.y);\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction applyAxisTransforms(final, axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    // Copy the current axis to the final axis before mutation\n    final.min = axis.min;\n    final.max = axis.max;\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction applyBoxTransforms(finalBox, box, transforms) {\n    applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);\n    applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    var originPoint = popmotion.mix(axis.min, axis.max, origin) - translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);\n}\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms) {\n    removeAxisTransforms(box.x, transforms, xKeys);\n    removeAxisTransforms(box.y, transforms, yKeys);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath) {\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.getLayoutState().delta;\n        // Incoporate each ancestor's scale into a culmulative treeScale for this component\n        treeScale.x *= delta.x.scale;\n        treeScale.y *= delta.y.scale;\n        // Apply each ancestor's calculated delta into this component's recorded layout box\n        applyBoxDelta(box, delta);\n        // If this is a draggable ancestor, also incorporate the node's transform to the layout box\n        if (isDraggable(node)) {\n            applyBoxTransforms(box, box, node.getLatestValues());\n        }\n    }\n}\n\n/**\n * Returns a boolean stating whether or not we converted the projection\n * to relative projection.\n */\nfunction convertToRelativeProjection(visualElement, isLayoutDrag) {\n    if (isLayoutDrag === void 0) { isLayoutDrag = true; }\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent)\n        return false;\n    var offset;\n    if (isLayoutDrag) {\n        offset = calcRelativeOffset(projectionParent.projection.target, visualElement.projection.target);\n        removeBoxTransforms(offset, projectionParent.getLatestValues());\n    }\n    else {\n        offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    }\n    eachAxis(function (axis) {\n        return visualElement.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);\n    });\n    return true;\n}\n\nvar unresolvedJobs = new Set();\nfunction pushJob(stack, job, pointer) {\n    if (!stack[pointer])\n        stack[pointer] = [];\n    stack[pointer].push(job);\n}\nfunction batchLayout(callback) {\n    unresolvedJobs.add(callback);\n    return function () { return unresolvedJobs.delete(callback); };\n}\nfunction flushLayout() {\n    if (!unresolvedJobs.size)\n        return;\n    var pointer = 0;\n    var reads = [[]];\n    var writes = [];\n    var setRead = function (job) { return pushJob(reads, job, pointer); };\n    var setWrite = function (job) {\n        pushJob(writes, job, pointer);\n        pointer++;\n    };\n    /**\n     * Resolve jobs into their array stacks\n     */\n    unresolvedJobs.forEach(function (callback) {\n        callback(setRead, setWrite);\n        pointer = 0;\n    });\n    unresolvedJobs.clear();\n    /**\n     * Execute jobs\n     */\n    var numStacks = writes.length;\n    for (var i = 0; i <= numStacks; i++) {\n        reads[i] && reads[i].forEach(executeJob);\n        writes[i] && writes[i].forEach(executeJob);\n    }\n}\nvar executeJob = function (job) { return job(); };\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\nvar lastPointerEvent;\nvar VisualElementDragControls = /** @class */ (function () {\n    function VisualElementDragControls(_a) {\n        var visualElement = _a.visualElement;\n        /**\n         * Track whether we're currently dragging.\n         *\n         * @internal\n         */\n        this.isDragging = false;\n        /**\n         * The current direction of drag, or `null` if both.\n         *\n         * @internal\n         */\n        this.currentDirection = null;\n        /**\n         * The permitted boundaries of travel, in pixels.\n         *\n         * @internal\n         */\n        this.constraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         *\n         * @internal\n         */\n        this.elastic = axisBox();\n        /**\n         * A reference to the host component's latest props.\n         *\n         * @internal\n         */\n        this.props = {};\n        /**\n         * @internal\n         */\n        this.hasMutatedConstraints = false;\n        /**\n         * Track the initial position of the cursor relative to the dragging element\n         * when dragging starts as a value of 0-1 on each axis. We then use this to calculate\n         * an ideal bounding box for the VisualElement renderer to project into every frame.\n         *\n         * @internal\n         */\n        this.cursorProgress = {\n            x: 0.5,\n            y: 0.5,\n        };\n        // When updating _dragX, or _dragY instead of the VisualElement,\n        // persist their values between drag gestures.\n        this.originPoint = {};\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        /**\n         * @internal\n         */\n        this.panSession = null;\n        this.visualElement = visualElement;\n        this.visualElement.enableLayoutProjection();\n        elementDragControls.set(visualElement, this);\n    }\n    /**\n     * Instantiate a PanSession for the drag gesture\n     *\n     * @public\n     */\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;\n        var onSessionStart = function (event) {\n            var _a;\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            _this.stopMotion();\n            /**\n             * Save the initial point. We'll use this to calculate the pointer's position rather\n             * than the one we receive when the gesture actually starts. By then, the pointer will\n             * have already moved, and the perception will be of the pointer \"slipping\" across the element\n             */\n            var initialPoint = getViewportPointFromEvent(event).point;\n            (_a = _this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(_this);\n            _this.cancelLayout = batchLayout(function (read, write) {\n                var ancestors = collectProjectingAncestors(_this.visualElement);\n                var children = collectProjectingChildren(_this.visualElement);\n                var tree = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(ancestors)), tslib.__read(children));\n                var hasManuallySetCursorOrigin = false;\n                /**\n                 * Apply a simple lock to the projection target. This ensures no animations\n                 * can run on the projection box while this lock is active.\n                 */\n                _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();\n                write(function () {\n                    tree.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    updateLayoutMeasurement(_this.visualElement);\n                    children.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    tree.forEach(function (element) { return element.restoreTransform(); });\n                    if (snapToCursor) {\n                        hasManuallySetCursorOrigin = _this.snapToCursor(initialPoint);\n                    }\n                });\n                read(function () {\n                    var isRelativeDrag = Boolean(_this.getAxisMotionValue(\"x\") && !_this.isExternalDrag());\n                    if (!isRelativeDrag) {\n                        _this.visualElement.rebaseProjectionTarget(true, _this.visualElement.measureViewportBox(false));\n                    }\n                    _this.visualElement.scheduleUpdateLayoutProjection();\n                    /**\n                     * When dragging starts, we want to find where the cursor is relative to the bounding box\n                     * of the element. Every frame, we calculate a new bounding box using this relative position\n                     * and let the visualElement renderer figure out how to reproject the element into this bounding\n                     * box.\n                     *\n                     * By doing it this way, rather than applying an x/y transform directly to the element,\n                     * we can ensure the component always visually sticks to the cursor as we'd expect, even\n                     * if the DOM element itself changes layout as a result of React updates the user might\n                     * make based on the drag position.\n                     */\n                    var projection = _this.visualElement.projection;\n                    eachAxis(function (axis) {\n                        if (!hasManuallySetCursorOrigin) {\n                            var _a = projection.target[axis], min = _a.min, max = _a.max;\n                            _this.cursorProgress[axis] = cursorProgress\n                                ? cursorProgress[axis]\n                                : popmotion.progress(min, max, initialPoint[axis]);\n                        }\n                        /**\n                         * If we have external drag MotionValues, record their origin point. On pointermove\n                         * we'll apply the pan gesture offset directly to this value.\n                         */\n                        var axisValue = _this.getAxisMotionValue(axis);\n                        if (axisValue) {\n                            _this.originPoint[axis] = axisValue.get();\n                        }\n                    });\n                });\n                write(function () {\n                    sync.flushSync.update();\n                    sync.flushSync.preRender();\n                    sync.flushSync.render();\n                    sync.flushSync.postRender();\n                });\n                read(function () { return _this.resolveDragConstraints(); });\n            });\n        };\n        var onStart = function (event, info) {\n            var _a, _b, _c;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            var _d = _this.props, drag = _d.drag, dragPropagation = _d.dragPropagation;\n            if (drag && !dragPropagation) {\n                if (_this.openGlobalLock)\n                    _this.openGlobalLock();\n                _this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!_this.openGlobalLock)\n                    return;\n            }\n            flushLayout();\n            // Set current drag status\n            _this.isDragging = true;\n            _this.currentDirection = null;\n            // Fire onDragStart event\n            (_b = (_a = _this.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n            (_c = _this.visualElement.animationState) === null || _c === void 0 ? void 0 : _c.setActive(AnimationType.Drag, true);\n        };\n        var onMove = function (event, info) {\n            var _a, _b, _c, _d;\n            var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !_this.openGlobalLock)\n                return;\n            var offset = info.offset;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && _this.currentDirection === null) {\n                _this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (_this.currentDirection !== null) {\n                    (_b = (_a = _this.props).onDirectionLock) === null || _b === void 0 ? void 0 : _b.call(_a, _this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            _this.updateAxis(\"x\", info.point, offset);\n            _this.updateAxis(\"y\", info.point, offset);\n            // Fire onDrag event\n            (_d = (_c = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n            // Update the last pointer event\n            lastPointerEvent = event;\n        };\n        var onSessionEnd = function (event, info) {\n            return _this.stop(event, info);\n        };\n        var transformPagePoint = this.props.transformPagePoint;\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart: onSessionStart,\n            onStart: onStart,\n            onMove: onMove,\n            onSessionEnd: onSessionEnd,\n        }, { transformPagePoint: transformPagePoint });\n    };\n    VisualElementDragControls.prototype.resolveDragConstraints = function () {\n        var _this = this;\n        var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n        var layout = this.visualElement.getLayoutState().layoutCorrected;\n        if (dragConstraints) {\n            this.constraints = isRefObject(dragConstraints)\n                ? this.resolveRefConstraints(layout, dragConstraints)\n                : calcRelativeConstraints(layout, dragConstraints);\n        }\n        else {\n            this.constraints = false;\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (this.constraints && !this.hasMutatedConstraints) {\n            eachAxis(function (axis) {\n                if (_this.getAxisMotionValue(axis)) {\n                    _this.constraints[axis] = rebaseAxisConstraints(layout[axis], _this.constraints[axis]);\n                }\n            });\n        }\n    };\n    VisualElementDragControls.prototype.resolveRefConstraints = function (layoutBox, constraints) {\n        var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;\n        var constraintsElement = constraints.current;\n        heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);\n        var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    };\n    VisualElementDragControls.prototype.cancelDrag = function () {\n        var _a, _b;\n        this.visualElement.unlockProjectionTarget();\n        (_a = this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.isDragging = false;\n        this.panSession && this.panSession.end();\n        this.panSession = null;\n        if (!this.props.dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    };\n    VisualElementDragControls.prototype.stop = function (event, info) {\n        var _a, _b, _c;\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = null;\n        var isDragging = this.isDragging;\n        this.cancelDrag();\n        if (!isDragging)\n            return;\n        var velocity = info.velocity;\n        this.animateDragEnd(velocity);\n        (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);\n    };\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\n        var _this = this;\n        return eachAxis(function (axis) {\n            var drag = _this.props.drag;\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, _this.currentDirection))\n                return;\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (axisValue) {\n                var box = _this.visualElement.getLayoutState().layout;\n                var length_1 = box[axis].max - box[axis].min;\n                var center = box[axis].min + length_1 / 2;\n                var offset = point[axis] - center;\n                _this.originPoint[axis] = point[axis];\n                axisValue.set(offset);\n            }\n            else {\n                _this.cursorProgress[axis] = 0.5;\n                return true;\n            }\n        }).includes(true);\n    };\n    /**\n     * Update the specified axis with the latest pointer information.\n     */\n    VisualElementDragControls.prototype.updateAxis = function (axis, point, offset) {\n        var drag = this.props.drag;\n        // If we're not dragging this axis, do an early return.\n        if (!shouldDrag(axis, drag, this.currentDirection))\n            return;\n        return this.getAxisMotionValue(axis)\n            ? this.updateAxisMotionValue(axis, offset)\n            : this.updateVisualElementAxis(axis, point);\n    };\n    VisualElementDragControls.prototype.updateAxisMotionValue = function (axis, offset) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!offset || !axisValue)\n            return;\n        var nextValue = this.originPoint[axis] + offset[axis];\n        var update = this.constraints\n            ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis])\n            : nextValue;\n        axisValue.set(update);\n    };\n    VisualElementDragControls.prototype.updateVisualElementAxis = function (axis, point) {\n        var _a;\n        // Get the actual layout bounding box of the element\n        var axisLayout = this.visualElement.getLayoutState().layout[axis];\n        // Calculate its current length. In the future we might want to lerp this to animate\n        // between lengths if the layout changes as we change the DOM\n        var axisLength = axisLayout.max - axisLayout.min;\n        // Get the initial progress that the pointer sat on this axis on gesture start.\n        var axisProgress = this.cursorProgress[axis];\n        // Calculate a new min point based on the latest pointer position, constraints and elastic\n        var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);\n        // Update the axis viewport target with this new min and the length\n        this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);\n    };\n    VisualElementDragControls.prototype.setProps = function (_a) {\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = tslib.__rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\n        this.props = tslib.__assign({ drag: drag,\n            dragDirectionLock: dragDirectionLock,\n            dragPropagation: dragPropagation,\n            dragConstraints: dragConstraints,\n            dragElastic: dragElastic,\n            dragMomentum: dragMomentum }, remainingProps);\n    };\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - If the component will perform layout animations, we output the gesture to the component's\n     *      visual bounding box\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n        var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;\n        var dragKey = \"_drag\" + axis.toUpperCase();\n        if (this.props[dragKey]) {\n            return this.props[dragKey];\n        }\n        else if (!layout && layoutId === undefined) {\n            return this.visualElement.getValue(axis, 0);\n        }\n    };\n    VisualElementDragControls.prototype.isLayoutDrag = function () {\n        return !this.getAxisMotionValue(\"x\");\n    };\n    VisualElementDragControls.prototype.isExternalDrag = function () {\n        var _a = this.props, _dragX = _a._dragX, _dragY = _a._dragY;\n        return _dragX || _dragY;\n    };\n    VisualElementDragControls.prototype.animateDragEnd = function (velocity) {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;\n        /**\n         * Everything beyond the drag gesture should be performed with\n         * relative projection so children stay in sync with their parent element.\n         */\n        var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());\n        /**\n         * If we had previously resolved constraints relative to the viewport,\n         * we need to also convert those to a relative coordinate space for the animation\n         */\n        var constraints = this.constraints || {};\n        if (isRelative &&\n            Object.keys(constraints).length &&\n            this.isLayoutDrag()) {\n            var projectionParent = this.visualElement.getProjectionParent();\n            if (projectionParent) {\n                var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);\n                eachAxis(function (axis) {\n                    var _a = relativeConstraints_1[axis], min = _a.min, max = _a.max;\n                    constraints[axis] = {\n                        min: isNaN(min) ? undefined : min,\n                        max: isNaN(max) ? undefined : max,\n                    };\n                });\n            }\n        }\n        var momentumAnimations = eachAxis(function (axis) {\n            var _a;\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\n                return;\n            }\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            var bounceStiffness = dragElastic ? 200 : 1000000;\n            var bounceDamping = dragElastic ? 40 : 10000000;\n            var inertia = tslib.__assign(tslib.__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return _this.getAxisMotionValue(axis)\n                ? _this.startAxisValueAnimation(axis, inertia)\n                : _this.visualElement.startLayoutAnimation(axis, inertia, isRelative);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(function () {\n            var _a, _b;\n            (_b = (_a = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n    };\n    VisualElementDragControls.prototype.stopMotion = function () {\n        var _this = this;\n        eachAxis(function (axis) {\n            var axisValue = _this.getAxisMotionValue(axis);\n            axisValue\n                ? axisValue.stop()\n                : _this.visualElement.stopLayoutAnimation();\n        });\n    };\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!axisValue)\n            return;\n        var currentValue = axisValue.get();\n        axisValue.set(currentValue);\n        axisValue.set(currentValue); // Set twice to hard-reset velocity\n        return startAnimation(axis, axisValue, 0, transition);\n    };\n    VisualElementDragControls.prototype.scalePoint = function () {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragConstraints = _a.dragConstraints;\n        if (!isRefObject(dragConstraints) || !this.constraintsBox)\n            return;\n        // Stop any current animations as there can be some visual glitching if we resize mid animation\n        this.stopMotion();\n        // Record the relative progress of the targetBox relative to the constraintsBox\n        var boxProgress = { x: 0, y: 0 };\n        eachAxis(function (axis) {\n            boxProgress[axis] = calcOrigin(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);\n        });\n        /**\n         * For each axis, calculate the current progress of the layout axis within the constraints.\n         * Then, using the latest layout and constraints measurements, reposition the new layout axis\n         * proportionally within the constraints.\n         */\n        this.updateConstraints(function () {\n            eachAxis(function (axis) {\n                if (!shouldDrag(axis, drag, null))\n                    return;\n                // Calculate the position of the targetBox relative to the constraintsBox using the\n                // previously calculated progress\n                var _a = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a.min, max = _a.max;\n                _this.visualElement.setProjectionTargetAxis(axis, min, max);\n            });\n        });\n        /**\n         * If any other draggable components are queuing the same tasks synchronously\n         * this will wait until they've all been scheduled before flushing.\n         */\n        setTimeout(flushLayout, 1);\n    };\n    VisualElementDragControls.prototype.updateConstraints = function (onReady) {\n        var _this = this;\n        this.cancelLayout = batchLayout(function (read, write) {\n            var ancestors = collectProjectingAncestors(_this.visualElement);\n            write(function () {\n                return ancestors.forEach(function (element) { return element.resetTransform(); });\n            });\n            read(function () { return updateLayoutMeasurement(_this.visualElement); });\n            write(function () {\n                return ancestors.forEach(function (element) { return element.restoreTransform(); });\n            });\n            read(function () {\n                _this.resolveDragConstraints();\n            });\n            if (onReady)\n                write(onReady);\n        });\n    };\n    VisualElementDragControls.prototype.mount = function (visualElement) {\n        var _this = this;\n        var element = visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n            drag && dragListener && _this.start(event);\n        });\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\n            _this.scalePoint();\n        });\n        /**\n         * Ensure drag constraints are resolved correctly relative to the dragging element\n         * whenever its layout changes.\n         */\n        var stopLayoutUpdateListener = visualElement.onLayoutUpdate(function () {\n            if (_this.isDragging) {\n                _this.resolveDragConstraints();\n            }\n        });\n        /**\n         * If the previous component with this same layoutId was dragging at the time\n         * it was unmounted, we want to continue the same gesture on this component.\n         */\n        var prevDragCursor = visualElement.prevDragCursor;\n        if (prevDragCursor) {\n            this.start(lastPointerEvent, { cursorProgress: prevDragCursor });\n        }\n        /**\n         * Return a function that will teardown the drag gesture\n         */\n        return function () {\n            stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();\n            stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n            _this.cancelDrag();\n        };\n    };\n    return VisualElementDragControls;\n}());\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold) {\n    if (lockThreshold === void 0) { lockThreshold = 10; }\n    var direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(tslib.__assign(tslib.__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    React.useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    React.useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @internalremarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = React.useRef(null);\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    React.useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\n/**\n * @public\n */\nvar Presence;\n(function (Presence) {\n    Presence[Presence[\"Entering\"] = 0] = \"Entering\";\n    Presence[Presence[\"Present\"] = 1] = \"Present\";\n    Presence[Presence[\"Exiting\"] = 2] = \"Exiting\";\n})(Presence || (Presence = {}));\n/**\n * @public\n */\nexports.VisibilityAction = void 0;\n(function (VisibilityAction) {\n    VisibilityAction[VisibilityAction[\"Hide\"] = 0] = \"Hide\";\n    VisibilityAction[VisibilityAction[\"Show\"] = 1] = \"Show\";\n})(exports.VisibilityAction || (exports.VisibilityAction = {}));\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = tslib.__read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    heyListen.invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n    var _a = tslib.__read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = tslib.__rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof HTMLElement))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = tslib.__assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nfunction pixelsToPercent(pixels, axis) {\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nfunction correctBorderRadius(latest, _layoutState, _a) {\n    var target = _a.target;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n    if (typeof latest === \"string\") {\n        if (styleValueTypes.px.test(latest)) {\n            latest = parseFloat(latest);\n        }\n        else {\n            return latest;\n        }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n    var x = pixelsToPercent(latest, target.x);\n    var y = pixelsToPercent(latest, target.y);\n    return x + \"% \" + y + \"%\";\n}\nvar varToken = \"_$css\";\nfunction correctBoxShadow(latest, _a) {\n    var delta = _a.delta, treeScale = _a.treeScale;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n    if (containsCSSVariables) {\n        latest = latest.replace(cssVariableRegex, function (match) {\n            cssVariables.push(match);\n            return varToken;\n        });\n    }\n    var shadow = styleValueTypes.complex.parse(latest);\n    // TODO: Doesn't support multiple shadows\n    if (shadow.length > 5)\n        return original;\n    var template = styleValueTypes.complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n    // Calculate the overall context scale\n    var xScale = delta.x.scale * treeScale.x;\n    var yScale = delta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n    var averageScale = popmotion.mix(xScale, yScale, 0.5);\n    // Blur\n    if (typeof shadow[2 + offset] === \"number\")\n        shadow[2 + offset] /= averageScale;\n    // Spread\n    if (typeof shadow[3 + offset] === \"number\")\n        shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n    if (containsCSSVariables) {\n        var i_1 = 0;\n        output = output.replace(varToken, function () {\n            var cssVariable = cssVariables[i_1];\n            i_1++;\n            return cssVariable;\n        });\n    }\n    return output;\n}\nvar borderCorrectionDefinition = {\n    process: correctBorderRadius,\n};\nvar defaultScaleCorrectors = {\n    borderRadius: tslib.__assign(tslib.__assign({}, borderCorrectionDefinition), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: borderCorrectionDefinition,\n    borderTopRightRadius: borderCorrectionDefinition,\n    borderBottomLeftRadius: borderCorrectionDefinition,\n    borderBottomRightRadius: borderCorrectionDefinition,\n    boxShadow: {\n        process: correctBoxShadow,\n    },\n};\n\nvar progressTarget = 1000;\nvar Animate = /** @class */ (function (_super) {\n    tslib.__extends(Animate, _super);\n    function Animate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A mutable object that tracks the target viewport box\n         * for the current animation frame.\n         */\n        _this.frameTarget = axisBox();\n        /**\n         * The current animation target, we use this to check whether to start\n         * a new animation or continue the existing one.\n         */\n        _this.currentAnimationTarget = axisBox();\n        /**\n         * Track whether we're animating this axis.\n         */\n        _this.isAnimating = {\n            x: false,\n            y: false,\n        };\n        _this.stopAxisAnimation = {\n            x: undefined,\n            y: undefined,\n        };\n        _this.isAnimatingTree = false;\n        _this.animate = function (target, origin, _a) {\n            if (_a === void 0) { _a = {}; }\n            var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, prevParent = _a.prevParent, config = tslib.__rest(_a, [\"originBox\", \"targetBox\", \"visibilityAction\", \"shouldStackAnimate\", \"onComplete\", \"prevParent\"]);\n            var _b = _this.props, visualElement = _b.visualElement, layout = _b.layout;\n            /**\n             * Early return if we've been instructed not to animate this render.\n             */\n            if (shouldStackAnimate === false) {\n                _this.isAnimatingTree = false;\n                return _this.safeToRemove();\n            }\n            /**\n             * Prioritise tree animations\n             */\n            if (_this.isAnimatingTree && shouldStackAnimate !== true) {\n                return;\n            }\n            else if (shouldStackAnimate) {\n                _this.isAnimatingTree = true;\n            }\n            /**\n             * Allow the measured origin (prev bounding box) and target (actual layout) to be\n             * overridden by the provided config.\n             */\n            origin = originBox || origin;\n            target = targetBox || target;\n            /**\n             * If this element has a projecting parent, there's an opportunity to animate\n             * it relatively to that parent rather than relatively to the viewport. This\n             * allows us to add orchestrated animations.\n             */\n            var isRelative = false;\n            var projectionParent = visualElement.getProjectionParent();\n            if (projectionParent) {\n                var prevParentViewportBox = projectionParent.prevViewportBox;\n                var parentLayout = projectionParent.getLayoutState().layout;\n                /**\n                 * If we're being provided a previous parent VisualElement by AnimateSharedLayout\n                 */\n                if (prevParent) {\n                    /**\n                     * If we've been provided an explicit target box it means we're animating back\n                     * to this previous parent. So we can make a relative box by comparing to the previous\n                     * parent's layout\n                     */\n                    if (targetBox) {\n                        parentLayout = prevParent.getLayoutState().layout;\n                    }\n                    /**\n                     * Likewise if we've been provided an explicit origin box it means we're\n                     * animating out from a different element. So we should figure out where that was\n                     * on screen relative to the new parent element.\n                     */\n                    if (originBox &&\n                        !checkIfParentHasChanged(prevParent, projectionParent) &&\n                        prevParent.prevViewportBox) {\n                        prevParentViewportBox = prevParent.prevViewportBox;\n                    }\n                }\n                if (prevParentViewportBox &&\n                    isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {\n                    isRelative = true;\n                    origin = calcRelativeOffset(prevParentViewportBox, origin);\n                    target = calcRelativeOffset(parentLayout, target);\n                }\n            }\n            var boxHasMoved = hasMoved(origin, target);\n            var animations = eachAxis(function (axis) {\n                var _a, _b;\n                /**\n                 * If layout is set to \"position\", we can resize the origin box based on the target\n                 * box and only animate its position.\n                 */\n                if (layout === \"position\") {\n                    var targetLength = target[axis].max - target[axis].min;\n                    origin[axis].max = origin[axis].min + targetLength;\n                }\n                if (visualElement.projection.isTargetLocked) {\n                    return;\n                }\n                else if (visibilityAction !== undefined) {\n                    visualElement.setVisibility(visibilityAction === exports.VisibilityAction.Show);\n                }\n                else if (boxHasMoved) {\n                    // If the box has moved, animate between it's current visual state and its\n                    // final state\n                    return _this.animateAxis(axis, target[axis], origin[axis], tslib.__assign(tslib.__assign({}, config), { isRelative: isRelative }));\n                }\n                else {\n                    (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    // If the box has remained in the same place, immediately set the axis target\n                    // to the final desired state\n                    return visualElement.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);\n                }\n            });\n            // Force a render to ensure there's no flash of uncorrected bounding box.\n            visualElement.syncRender();\n            /**\n             * If this visualElement isn't present (ie it's been removed from the tree by the user but\n             * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations\n             * have successfully finished.\n             */\n            return Promise.all(animations).then(function () {\n                _this.isAnimatingTree = false;\n                onComplete && onComplete();\n                visualElement.notifyLayoutAnimationComplete();\n            });\n        };\n        return _this;\n    }\n    Animate.prototype.componentDidMount = function () {\n        var _this = this;\n        var visualElement = this.props.visualElement;\n        visualElement.animateMotionValue = startAnimation;\n        visualElement.enableLayoutProjection();\n        this.unsubLayoutReady = visualElement.onLayoutUpdate(this.animate);\n        visualElement.layoutSafeToRemove = function () { return _this.safeToRemove(); };\n        addScaleCorrection(defaultScaleCorrectors);\n    };\n    Animate.prototype.componentWillUnmount = function () {\n        var _this = this;\n        this.unsubLayoutReady();\n        eachAxis(function (axis) { var _a, _b; return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a); });\n    };\n    /**\n     * TODO: This manually performs animations on the visualElement's layout progress\n     * values. It'd be preferable to amend the startLayoutAxisAnimation\n     * API to accept more custom animations like this.\n     */\n    Animate.prototype.animateAxis = function (axis, target, origin, _a) {\n        var _this = this;\n        var _b, _c;\n        var _d = _a === void 0 ? {} : _a, transition = _d.transition, isRelative = _d.isRelative;\n        /**\n         * If we're not animating to a new target, don't run this animation\n         */\n        if (this.isAnimating[axis] &&\n            axisIsEqual(target, this.currentAnimationTarget[axis])) {\n            return;\n        }\n        (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.isAnimating[axis] = true;\n        var visualElement = this.props.visualElement;\n        var frameTarget = this.frameTarget[axis];\n        var layoutProgress = visualElement.getProjectionAnimationProgress()[axis];\n        /**\n         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might\n         * be re-incoporated into a subsequent spring animation.\n         */\n        layoutProgress.clearListeners();\n        layoutProgress.set(0);\n        layoutProgress.set(0);\n        /**\n         * Create an animation function to run once per frame. This will tween the visual bounding box from\n         * origin to target using the latest progress value.\n         */\n        var frame = function () {\n            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress\n            var p = layoutProgress.get() / progressTarget;\n            // Tween the axis and update the visualElement with the latest values\n            tweenAxis(frameTarget, origin, target, p);\n            visualElement.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);\n        };\n        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.\n        frame();\n        // Create a function to stop animation on this specific axis\n        var unsubscribeProgress = layoutProgress.onChange(frame);\n        this.stopAxisAnimation[axis] = function () {\n            _this.isAnimating[axis] = false;\n            layoutProgress.stop();\n            unsubscribeProgress();\n        };\n        this.currentAnimationTarget[axis] = target;\n        var layoutTransition = transition ||\n            visualElement.getDefaultTransition() ||\n            defaultLayoutTransition;\n        // Start the animation on this axis\n        var animation = startAnimation(axis === \"x\" ? \"layoutX\" : \"layoutY\", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, \"layout\")).then(this.stopAxisAnimation[axis]);\n        return animation;\n    };\n    Animate.prototype.safeToRemove = function () {\n        var _a, _b;\n        (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    Animate.prototype.render = function () {\n        return null;\n    };\n    return Animate;\n}(React__namespace.Component));\nfunction AnimateLayoutContextProvider(props) {\n    var _a = tslib.__read(usePresence(), 2), safeToRemove = _a[1];\n    return React__namespace.createElement(Animate, tslib.__assign({}, props, { safeToRemove: safeToRemove }));\n}\nfunction hasMoved(a, b) {\n    return (!isZeroBox(a) &&\n        !isZeroBox(b) &&\n        (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y)));\n}\nvar zeroAxis = { min: 0, max: 0 };\nfunction isZeroBox(a) {\n    return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);\n}\nfunction axisIsEqual(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {\n    return prevParent || (!prevParent && !(originBox || targetBox));\n}\n\n/**\n * Default handlers for batching VisualElements\n */\nvar defaultHandler = {\n    layoutReady: function (child) { return child.notifyLayoutReady(); },\n};\n/**\n * Create a batcher to process VisualElements\n */\nfunction createBatcher() {\n    var queue = new Set();\n    return {\n        add: function (child) { return queue.add(child); },\n        flush: function (_a) {\n            var _b = _a === void 0 ? defaultHandler : _a, layoutReady = _b.layoutReady, parent = _b.parent;\n            batchLayout(function (read, write) {\n                var order = Array.from(queue).sort(compareByDepth);\n                var ancestors = parent\n                    ? collectProjectingAncestors(parent)\n                    : [];\n                write(function () {\n                    var allElements = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(ancestors)), tslib.__read(order));\n                    allElements.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    order.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    ancestors.forEach(function (element) { return element.restoreTransform(); });\n                    order.forEach(layoutReady);\n                });\n                read(function () {\n                    /**\n                     * After all children have started animating, ensure any Entering components are set to Present.\n                     * If we add deferred animations (set up all animations and then start them in two loops) this\n                     * could be moved to the start loop. But it needs to happen after all the animations configs\n                     * are generated in AnimateSharedLayout as this relies on presence data\n                     */\n                    order.forEach(function (child) {\n                        if (child.isPresent)\n                            child.presence = Presence.Present;\n                    });\n                });\n                write(function () {\n                    /**\n                     * Starting these animations will have queued jobs on the frame loop. In some situations,\n                     * like when removing an element, these will be processed too late after the DOM is manipulated,\n                     * leaving a flash of incorrectly-projected content. By manually flushing these jobs\n                     * we ensure there's no flash.\n                     */\n                    sync.flushSync.preRender();\n                    sync.flushSync.render();\n                });\n                read(function () {\n                    /**\n                     * Schedule a callback at the end of the following frame to assign the latest projection\n                     * box to the prevViewportBox snapshot. Once global batching is in place this could be run\n                     * synchronously. But for now it ensures that if any nested `AnimateSharedLayout` top-level\n                     * child attempts to calculate its previous relative position against a prevViewportBox\n                     * it will be against its latest projection box instead, as the snapshot is useless beyond this\n                     * render.\n                     */\n                    sync__default['default'].postRender(function () {\n                        return order.forEach(assignProjectionToSnapshot);\n                    });\n                    queue.clear();\n                });\n            });\n            // TODO: Need to find a layout-synchronous way of flushing this\n            flushLayout();\n        },\n    };\n}\nfunction assignProjectionToSnapshot(child) {\n    child.prevViewportBox = child.projection.target;\n}\n\nvar SharedLayoutContext = React.createContext(createBatcher());\n/**\n * @internal\n */\nvar FramerTreeLayoutContext = React.createContext(createBatcher());\nfunction isSharedLayout(context) {\n    return !!context.forceUpdate;\n}\n\n/**\n * This component is responsible for scheduling the measuring of the motion component\n */\nvar Measure = /** @class */ (function (_super) {\n    tslib.__extends(Measure, _super);\n    function Measure() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * If this is a child of a SyncContext, register the VisualElement with it on mount.\n     */\n    Measure.prototype.componentDidMount = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement = _a.visualElement;\n        isSharedLayout(syncLayout) && syncLayout.register(visualElement);\n        isSharedLayout(framerSyncLayout) &&\n            framerSyncLayout.register(visualElement);\n        visualElement.onUnmount(function () {\n            if (isSharedLayout(syncLayout)) {\n                syncLayout.remove(visualElement);\n            }\n            if (isSharedLayout(framerSyncLayout)) {\n                framerSyncLayout.remove(visualElement);\n            }\n        });\n    };\n    /**\n     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then\n     * handle the snapshotting.\n     *\n     * If it is stand-alone component, add it to the batcher.\n     */\n    Measure.prototype.getSnapshotBeforeUpdate = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;\n        if (isSharedLayout(syncLayout)) {\n            syncLayout.syncUpdate();\n        }\n        else {\n            snapshotViewportBox(visualElement);\n            syncLayout.add(visualElement);\n        }\n        return null;\n    };\n    Measure.prototype.componentDidUpdate = function () {\n        var syncLayout = this.props.syncLayout;\n        if (!isSharedLayout(syncLayout))\n            syncLayout.flush();\n    };\n    Measure.prototype.render = function () {\n        return null;\n    };\n    return Measure;\n}(React__default['default'].Component));\nfunction MeasureContextProvider(props) {\n    var syncLayout = React.useContext(SharedLayoutContext);\n    var framerSyncLayout = React.useContext(FramerTreeLayoutContext);\n    return (React__default['default'].createElement(Measure, tslib.__assign({}, props, { syncLayout: syncLayout, framerSyncLayout: framerSyncLayout })));\n}\n\nvar layoutAnimations = {\n    measureLayout: MeasureContextProvider,\n    layoutAnimation: AnimateLayoutContextProvider,\n};\n\nvar createProjectionState = function () { return ({\n    isEnabled: false,\n    isHydrated: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox(),\n}); };\nfunction createLayoutState() {\n    return {\n        isHydrated: false,\n        layout: axisBox(),\n        layoutCorrected: axisBox(),\n        treeScale: { x: 1, y: 1 },\n        delta: delta(),\n        deltaFinal: delta(),\n        deltaTransform: \"\",\n    };\n}\nvar zeroLayout = createLayoutState();\n\n/**\n * Build a transform style that takes a calculated delta between the element's current\n * space on screen and projects it into the desired space.\n */\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\n    var x = _a.x, y = _a.y;\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = x.translate / treeScale.x;\n    var yTranslate = y.translate / treeScale.y;\n    var transform = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\" + rotate + \") \";\n        if (rotateX)\n            transform += \"rotateX(\" + rotateX + \") \";\n        if (rotateY)\n            transform += \"rotateY(\" + rotateY + \") \";\n    }\n    transform += \"scale(\" + x.scale + \", \" + y.scale + \")\";\n    return !latestTransform && transform === identityProjection ? \"\" : transform;\n}\n/**\n * Take the calculated delta origin and apply it as a transform string.\n */\nfunction buildLayoutProjectionTransformOrigin(_a) {\n    var deltaFinal = _a.deltaFinal;\n    return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\n}\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            return names.forEach(function (name) {\n                var _a;\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                var on = \"on\" + name;\n                var propListener = props[on];\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args)));\n        };\n    });\n    return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n    var target = _b.target;\n    /**\n     * Reset the corrected box with the latest values from box, as we're then going\n     * to perform mutative operations on it.\n     */\n    resetBox(layoutCorrected, layout);\n    /**\n     * Apply all the parent deltas to this box to produce the corrected box. This\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n     */\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\n    /**\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\n     * It might be that to simplify this we may want to accept that user-set scale is also corrected\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n     * to allow people to choose whether these styles are corrected based on just the\n     * layout reprojection or the final bounding box.\n     */\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nfunction setCurrentViewportBox(visualElement) {\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent) {\n        visualElement.rebaseProjectionTarget();\n        return;\n    }\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    eachAxis(function (axis) {\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n    });\n}\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\n        if (options === void 0) { options = {}; }\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender and onViewportBoxUpdate.\n         */\n        var lifecycles = createLifecycles();\n        /**\n         *\n         */\n        var projection = createProjectionState();\n        /**\n         * A reference to the nearest projecting parent. This is either\n         * undefined if we haven't looked for the nearest projecting parent,\n         * false if there is no parent performing layout projection, or a reference\n         * to the projecting parent.\n         */\n        var projectionParent;\n        /**\n         * This is a reference to the visual state of the \"lead\" visual element.\n         * Usually, this will be this visual element. But if it shares a layoutId\n         * with other visual elements, only one of them will be designated lead by\n         * AnimateSharedLayout. All the other visual elements will take on the visual\n         * appearance of the lead while they crossfade to it.\n         */\n        var leadProjection = projection;\n        var leadLatestValues = latestValues;\n        var unsubscribeFromLeadVisualElement;\n        /**\n         * The latest layout measurements and calculated projections. This\n         * is seperate from the target projection data in visualState as\n         * many visual elements might point to the same piece of visualState as\n         * a target, whereas they might each have different layouts and thus\n         * projection calculations needed to project into the same viewport box.\n         */\n        var layoutState = createLayoutState();\n        /**\n         *\n         */\n        var crossfader;\n        /**\n         * Keep track of whether the viewport box has been updated since the\n         * last time the layout projection was re-calculated.\n         */\n        var hasViewportBoxUpdated = false;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * x/y motion values that track the progress of initiated layout\n         * animations.\n         *\n         * TODO: Target for removal\n         */\n        var projectionTargetProgress;\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = tslib.__assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         *\n         */\n        function render() {\n            if (!instance)\n                return;\n            if (element.isProjectionReady()) {\n                /**\n                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n                 * This is the final box that we will then project into by calculating a transform delta and\n                 * applying it to the corrected box.\n                 */\n                applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\n                /**\n                 * Update the delta between the corrected box and the final target box, after\n                 * user-set transforms are applied to it. This will be used by the renderer to\n                 * create a transform style that will reproject the element from its actual layout\n                 * into the desired bounding box.\n                 */\n                updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\n            }\n            triggerBuild();\n            renderInstance(instance, renderState);\n        }\n        function triggerBuild() {\n            var valuesToRender = latestValues;\n            if (crossfader && crossfader.isActive()) {\n                var crossfadedValues = crossfader.getCrossfadeState(element);\n                if (crossfadedValues)\n                    valuesToRender = crossfadedValues;\n            }\n            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        function updateLayoutProjection() {\n            if (!element.isProjectionReady())\n                return;\n            var delta = layoutState.delta, treeScale = layoutState.treeScale;\n            var prevTreeScaleX = treeScale.x;\n            var prevTreeScaleY = treeScale.y;\n            var prevDeltaTransform = layoutState.deltaTransform;\n            updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\n            hasViewportBoxUpdated &&\n                element.notifyViewportBoxUpdate(leadProjection.target, delta);\n            hasViewportBoxUpdated = false;\n            var deltaTransform = buildLayoutProjectionTransform(delta, treeScale);\n            if (deltaTransform !== prevDeltaTransform ||\n                // Also compare calculated treeScale, for values that rely on this only for scale correction\n                prevTreeScaleX !== treeScale.x ||\n                prevTreeScaleY !== treeScale.y) {\n                element.scheduleRender();\n            }\n            layoutState.deltaTransform = deltaTransform;\n        }\n        function updateTreeLayoutProjection() {\n            element.layoutTree.forEach(fireUpdateLayoutProjection);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync__default['default'].update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = tslib.__assign(tslib.__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             * An ancestor path back to the root visual element. This is used\n             * by layout projection to quickly recurse back up the tree.\n             */\n            path: parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path)), [parent]) : [], layoutTree: parent ? parent.layoutTree : new FlatTree(), \n            /**\n             *\n             */\n            presenceId: presenceId,\n            projection: projection, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by AnimateSharedLayout, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                instance = element.current = newInstance;\n                element.pointTo(element);\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            },\n            /**\n             *\n             */\n            unmount: function () {\n                sync.cancelSync.update(update);\n                sync.cancelSync.render(render);\n                sync.cancelSync.preRender(element.updateLayoutProjection);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                element.stopLayoutAnimation();\n                element.layoutTree.remove(element);\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                lifecycles.clearAllListeners();\n            },\n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () { return closestVariantNode.variantChildren.delete(child); };\n                }\n            },\n            sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * A method that schedules an update to layout projections throughout\n             * the tree. We inherit from the parent so there's only ever one\n             * job scheduled on the next frame - that of the root visual element.\n             */\n            scheduleUpdateLayoutProjection: parent\n                ? parent.scheduleUpdateLayoutProjection\n                : function () {\n                    return sync__default['default'].preRender(element.updateTreeLayoutProjection, false, true);\n                }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            },\n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            },\n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            },\n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            },\n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            },\n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync__default['default'].render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            },\n            // Layout projection ==============================\n            /**\n             * Enable layout projection for this visual element. Won't actually\n             * occur until we also have hydrated layout measurements.\n             */\n            enableLayoutProjection: function () {\n                projection.isEnabled = true;\n                element.layoutTree.add(element);\n            },\n            /**\n             * Lock the projection target, for instance when dragging, so\n             * nothing else can try and animate it.\n             */\n            lockProjectionTarget: function () {\n                projection.isTargetLocked = true;\n            },\n            unlockProjectionTarget: function () {\n                element.stopLayoutAnimation();\n                projection.isTargetLocked = false;\n            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {\n                crossfader = newCrossfader;\n            }, isProjectionReady: function () {\n                return projection.isEnabled &&\n                    projection.isHydrated &&\n                    layoutState.isHydrated;\n            }, \n            /**\n             * Start a layout animation on a given axis.\n             */\n            startLayoutAnimation: function (axis, transition, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var progress = element.getProjectionAnimationProgress()[axis];\n                var _a = isRelative\n                    ? projection.relativeTarget[axis]\n                    : projection.target[axis], min = _a.min, max = _a.max;\n                var length = max - min;\n                progress.clearListeners();\n                progress.set(min);\n                progress.set(min); // Set twice to hard-reset velocity\n                progress.onChange(function (v) {\n                    element.setProjectionTargetAxis(axis, v, v + length, isRelative);\n                });\n                return element.animateMotionValue(axis, progress, 0, transition);\n            },\n            /**\n             * Stop layout animations.\n             */\n            stopLayoutAnimation: function () {\n                eachAxis(function (axis) {\n                    return element.getProjectionAnimationProgress()[axis].stop();\n                });\n            },\n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function (withTransform) {\n                if (withTransform === void 0) { withTransform = true; }\n                var viewportBox = measureViewportBox(instance, options);\n                if (!withTransform)\n                    removeBoxTransforms(viewportBox, latestValues);\n                return viewportBox;\n            },\n            /**\n             * Get the motion values tracking the layout animations on each\n             * axis. Lazy init if not already created.\n             */\n            getProjectionAnimationProgress: function () {\n                projectionTargetProgress || (projectionTargetProgress = {\n                    x: motionValue(0),\n                    y: motionValue(0),\n                });\n                return projectionTargetProgress;\n            },\n            /**\n             * Update the projection of a single axis. Schedule an update to\n             * the tree layout projection.\n             */\n            setProjectionTargetAxis: function (axis, min, max, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var target;\n                if (isRelative) {\n                    if (!projection.relativeTarget) {\n                        projection.relativeTarget = axisBox();\n                    }\n                    target = projection.relativeTarget[axis];\n                }\n                else {\n                    projection.relativeTarget = undefined;\n                    target = projection.target[axis];\n                }\n                projection.isHydrated = true;\n                target.min = min;\n                target.max = max;\n                // Flag that we want to fire the onViewportBoxUpdate event handler\n                hasViewportBoxUpdated = true;\n                lifecycles.notifySetAxisTarget();\n            },\n            /**\n             * Rebase the projection target on top of the provided viewport box\n             * or the measured layout. This ensures that non-animating elements\n             * don't fall out of sync differences in measurements vs projections\n             * after a page scroll or other relayout.\n             */\n            rebaseProjectionTarget: function (force, box) {\n                if (box === void 0) { box = layoutState.layout; }\n                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;\n                var shouldRebase = !projection.relativeTarget &&\n                    !projection.isTargetLocked &&\n                    !x.isAnimating() &&\n                    !y.isAnimating();\n                if (force || shouldRebase) {\n                    eachAxis(function (axis) {\n                        var _a = box[axis], min = _a.min, max = _a.max;\n                        element.setProjectionTargetAxis(axis, min, max);\n                    });\n                }\n            },\n            /**\n             * Notify the visual element that its layout is up-to-date.\n             * Currently Animate.tsx uses this to check whether a layout animation\n             * needs to be performed.\n             */\n            notifyLayoutReady: function (config) {\n                setCurrentViewportBox(element);\n                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\n            }, \n            /**\n             * Temporarily reset the transform of the instance.\n             */\n            resetTransform: function () { return resetTransform(element, instance, props); }, restoreTransform: function () { return restoreTransform(instance, renderState); }, updateLayoutProjection: updateLayoutProjection,\n            updateTreeLayoutProjection: function () {\n                element.layoutTree.forEach(fireResolveRelativeTargetBox);\n                /**\n                 * Schedule the projection updates at the end of the current preRender\n                 * step. This will ensure that all layout trees will first resolve\n                 * relative projection boxes into viewport boxes, and *then*\n                 * update projections.\n                 */\n                sync__default['default'].preRender(updateTreeLayoutProjection, false, true);\n                // sync.postRender(() => element.scheduleUpdateLayoutProjection())\n            },\n            getProjectionParent: function () {\n                if (projectionParent === undefined) {\n                    var foundParent = false;\n                    // Search backwards through the tree path\n                    for (var i = element.path.length - 1; i >= 0; i--) {\n                        var ancestor = element.path[i];\n                        if (ancestor.projection.isEnabled) {\n                            foundParent = ancestor;\n                            break;\n                        }\n                    }\n                    projectionParent = foundParent;\n                }\n                return projectionParent;\n            },\n            resolveRelativeTargetBox: function () {\n                var relativeParent = element.getProjectionParent();\n                if (!projection.relativeTarget || !relativeParent)\n                    return;\n                calcRelativeBox(projection, relativeParent.projection);\n                if (isDraggable(relativeParent)) {\n                    var target = projection.target;\n                    applyBoxTransforms(target, target, relativeParent.getLatestValues());\n                }\n            },\n            shouldResetTransform: function () {\n                return Boolean(props._layoutResetTransform);\n            },\n            /**\n             *\n             */\n            pointTo: function (newLead) {\n                leadProjection = newLead.projection;\n                leadLatestValues = newLead.getLatestValues();\n                /**\n                 * Subscribe to lead component's layout animations\n                 */\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                unsubscribeFromLeadVisualElement = popmotion.pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {\n                    var _a;\n                    if (element.isPresent) {\n                        element.presence = Presence.Present;\n                    }\n                    else {\n                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);\n                    }\n                }));\n            }, \n            // TODO: Clean this up\n            isPresent: true, presence: Presence.Entering });\n        return element;\n    };\n};\nfunction fireResolveRelativeTargetBox(child) {\n    child.resolveRelativeTargetBox();\n}\nfunction fireUpdateLayoutProjection(child) {\n    child.updateLayoutProjection();\n}\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === styleValueTypes.number || v === styleValueTypes.px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform)\n        return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n}; };\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a) {\n        var x = _a.x;\n        return x.max - x.min;\n    },\n    height: function (_a) {\n        var y = _a.y;\n        return y.max - y.min;\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = tslib.__assign({}, target);\n    transitionEnd = tslib.__assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var to = target[key];\n        var fromType = findDimensionValueType(from);\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    heyListen.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === styleValueTypes.px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues = removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = tslib.__read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle$1(domElement);\n            return ((isCSSVariable$1(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return getBoundingBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return tslib.__assign({ transition: transition,\n            transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nvar svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nvar featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutAnimations);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nvar motion = /*@__PURE__*/ createMotionProxy(function (Component, config) {\n    return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement);\n});\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement));\n}\n\n/**\n * @public\n */\nvar m = createMotionProxy(createDomMotionConfig);\n\nfunction useForceUpdate() {\n    var unloadingRef = React.useRef(false);\n    var _a = tslib.__read(React.useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return React.useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = React.useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    React.useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React__namespace.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = React.useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = React.useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = React.useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = React.useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = React.useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React__namespace.createElement(React__namespace.Fragment, null, filteredChildren.map(function (child) { return (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = tslib.__spreadArray([], tslib.__read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return React.cloneElement(child); })));\n};\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n    };\n}\n\nfunction createCrossfader() {\n    /**\n     * The current state of the crossfade as a value between 0 and 1\n     */\n    var progress = motionValue(1);\n    var options = {\n        lead: undefined,\n        follow: undefined,\n        crossfadeOpacity: false,\n        preserveFollowOpacity: false,\n    };\n    var prevOptions = tslib.__assign({}, options);\n    var leadState = {};\n    var followState = {};\n    /**\n     *\n     */\n    var isActive = false;\n    /**\n     *\n     */\n    var finalCrossfadeFrame = null;\n    /**\n     * Framestamp of the last frame we updated values at.\n     */\n    var prevUpdate = 0;\n    function startCrossfadeAnimation(target, transition) {\n        var lead = options.lead, follow = options.follow;\n        isActive = true;\n        finalCrossfadeFrame = null;\n        var hasUpdated = false;\n        var onUpdate = function () {\n            hasUpdated = true;\n            lead && lead.scheduleRender();\n            follow && follow.scheduleRender();\n        };\n        var onComplete = function () {\n            isActive = false;\n            /**\n             * If the crossfade animation is no longer active, flag a frame\n             * that we're still allowed to crossfade\n             */\n            finalCrossfadeFrame = sync.getFrameData().timestamp;\n        };\n        transition = transition && getValueTransition(transition, \"crossfade\");\n        return animate(progress, target, tslib.__assign(tslib.__assign({}, transition), { onUpdate: onUpdate, onComplete: function () {\n                if (!hasUpdated) {\n                    progress.set(target);\n                    /**\n                     * If we never ran an update, for instance if this was an instant transition, fire a\n                     * simulated final frame to ensure the crossfade gets applied correctly.\n                     */\n                    sync__default['default'].read(onComplete);\n                }\n                else {\n                    onComplete();\n                }\n                onUpdate();\n            } }));\n    }\n    function updateCrossfade() {\n        var _a, _b;\n        /**\n         * We only want to compute the crossfade once per frame, so we\n         * compare the previous update framestamp with the current frame\n         * and early return if they're the same.\n         */\n        var timestamp = sync.getFrameData().timestamp;\n        var lead = options.lead, follow = options.follow;\n        if (timestamp === prevUpdate || !lead)\n            return;\n        prevUpdate = timestamp;\n        /**\n         * Merge each component's latest values into our crossfaded state\n         * before crossfading.\n         */\n        var latestLeadValues = lead.getLatestValues();\n        Object.assign(leadState, latestLeadValues);\n        var latestFollowValues = follow\n            ? follow.getLatestValues()\n            : options.prevValues;\n        Object.assign(followState, latestFollowValues);\n        var p = progress.get();\n        /**\n         * Crossfade the opacity between the two components. This will result\n         * in a different opacity for each component.\n         */\n        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n        if (options.crossfadeOpacity && follow) {\n            leadState.opacity = popmotion.mix(\n            /**\n             * If the follow child has been completely hidden we animate\n             * this opacity from its previous opacity, but otherwise from completely transparent.\n             */\n            follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n            followState.opacity = options.preserveFollowOpacity\n                ? followTargetOpacity\n                : popmotion.mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n        }\n        else if (!follow) {\n            leadState.opacity = popmotion.mix(followTargetOpacity, leadTargetOpacity, p);\n        }\n        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n    }\n    return {\n        isActive: function () {\n            return leadState &&\n                (isActive || sync.getFrameData().timestamp === finalCrossfadeFrame);\n        },\n        fromLead: function (transition) {\n            return startCrossfadeAnimation(0, transition);\n        },\n        toLead: function (transition) {\n            var initialProgress = 0;\n            if (!options.prevValues && !options.follow) {\n                /**\n                 * If we're not coming from anywhere, start at the end of the animation.\n                 */\n                initialProgress = 1;\n            }\n            else if (prevOptions.lead === options.follow &&\n                prevOptions.follow === options.lead) {\n                /**\n                 * If we're swapping follow/lead we can reverse the progress\n                 */\n                initialProgress = 1 - progress.get();\n            }\n            progress.set(initialProgress);\n            return startCrossfadeAnimation(1, transition);\n        },\n        reset: function () { return progress.set(1); },\n        stop: function () { return progress.stop(); },\n        getCrossfadeState: function (element) {\n            updateCrossfade();\n            if (element === options.lead) {\n                return leadState;\n            }\n            else if (element === options.follow) {\n                return followState;\n            }\n        },\n        setOptions: function (newOptions) {\n            prevOptions = options;\n            options = newOptions;\n            leadState = {};\n            followState = {};\n        },\n        getLatestValues: function () {\n            return leadState;\n        },\n    };\n}\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(popmotion.progress(min, max, p));\n    };\n}\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\" + borders[i] + \"Radius\";\n        var followRadius = getRadius(latestFollowValues, borderLabel);\n        var leadRadius = getRadius(latestLeadValues, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        /**\n         * Currently we're only crossfading between numerical border radius.\n         * It would be possible to crossfade between percentages for a little\n         * extra bundle size.\n         */\n        if (typeof followRadius === \"number\" &&\n            typeof leadRadius === \"number\") {\n            var radius = Math.max(popmotion.mix(followRadius, leadRadius, p), 0);\n            leadState[borderLabel] = followState[borderLabel] = radius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (latestFollowValues.rotate || latestLeadValues.rotate) {\n        var rotate = popmotion.mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n        leadState.rotate = followState.rotate = rotate;\n    }\n    /**\n     * We only want to mix the background color if there's a follow element\n     * that we're not crossfading opacity between. For instance with switch\n     * AnimateSharedLayout animations, this helps the illusion of a continuous\n     * element being animated but also cuts down on the number of paints triggered\n     * for elements where opacity is doing that work for us.\n     */\n    if (!hasFollowElement &&\n        latestLeadValues.backgroundColor &&\n        latestFollowValues.backgroundColor) {\n        /**\n         * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n         * We could probably create a mixer that runs at the start of the animation but\n         * the idea behind the crossfader is that it runs dynamically between two potentially\n         * changing targets (ie opacity or borderRadius may be animating independently via variants)\n         */\n        leadState.backgroundColor = followState.backgroundColor = popmotion.mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\nfunction layoutStack() {\n    var stack = new Set();\n    var state = { leadIsExiting: false };\n    var prevState = tslib.__assign({}, state);\n    var prevValues;\n    var prevViewportBox;\n    var prevDragCursor;\n    var crossfader = createCrossfader();\n    var needsCrossfadeAnimation = false;\n    function getFollowViewportBox() {\n        return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n    }\n    function getFollowLayout() {\n        var _a;\n        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n    }\n    return {\n        add: function (element) {\n            element.setCrossfader(crossfader);\n            stack.add(element);\n            /**\n             * Hydrate new element with previous drag position if we have one\n             */\n            if (prevDragCursor)\n                element.prevDragCursor = prevDragCursor;\n            if (!state.lead)\n                state.lead = element;\n        },\n        remove: function (element) {\n            stack.delete(element);\n        },\n        getLead: function () { return state.lead; },\n        updateSnapshot: function () {\n            if (!state.lead)\n                return;\n            prevValues = crossfader.isActive()\n                ? crossfader.getLatestValues()\n                : state.lead.getLatestValues();\n            prevViewportBox = state.lead.prevViewportBox;\n            var dragControls = elementDragControls.get(state.lead);\n            if (dragControls && dragControls.isDragging) {\n                prevDragCursor = dragControls.cursorProgress;\n            }\n        },\n        clearSnapshot: function () {\n            prevDragCursor = prevViewportBox = undefined;\n        },\n        updateLeadAndFollow: function () {\n            var _a;\n            prevState = tslib.__assign({}, state);\n            var lead;\n            var follow;\n            var order = Array.from(stack);\n            for (var i = order.length; i--; i >= 0) {\n                var element = order[i];\n                if (lead)\n                    follow !== null && follow !== void 0 ? follow : (follow = element);\n                lead !== null && lead !== void 0 ? lead : (lead = element);\n                if (lead && follow)\n                    break;\n            }\n            state.lead = lead;\n            state.follow = follow;\n            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n            crossfader.setOptions({\n                lead: lead,\n                follow: follow,\n                prevValues: prevValues,\n                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),\n            });\n            if (\n            // Don't crossfade if we've just animated back from lead and switched the\n            // old follow to the new lead.\n            state.lead !== prevState.follow &&\n                (prevState.lead !== state.lead ||\n                    prevState.leadIsExiting !== state.leadIsExiting)) {\n                needsCrossfadeAnimation = true;\n            }\n        },\n        animate: function (child, shouldCrossfade) {\n            var _a;\n            if (shouldCrossfade === void 0) { shouldCrossfade = false; }\n            if (child === state.lead) {\n                if (shouldCrossfade) {\n                    /**\n                     * Point a lead to itself in case it was previously pointing\n                     * to a different visual element\n                     */\n                    child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(true);\n                }\n                var config = {};\n                var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n                if (prevParent) {\n                    /**\n                     * We'll use this to determine if the element or its layoutId has been reparented.\n                     */\n                    config.prevParent = prevParent;\n                }\n                if (child.presence === Presence.Entering) {\n                    config.originBox = getFollowViewportBox();\n                }\n                else if (child.presence === Presence.Exiting) {\n                    config.targetBox = getFollowLayout();\n                }\n                if (needsCrossfadeAnimation) {\n                    needsCrossfadeAnimation = false;\n                    var transition = child.getDefaultTransition();\n                    child.presence === Presence.Entering\n                        ? crossfader.toLead(transition)\n                        : crossfader.fromLead(transition);\n                }\n                child.notifyLayoutReady(config);\n            }\n            else {\n                if (shouldCrossfade) {\n                    state.lead && child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(false);\n                }\n            }\n        },\n    };\n}\n\nfunction resetRotate(child) {\n    // If there's no detected rotation values, we can early return without a forced render.\n    var hasRotate = false;\n    // Keep a record of all the values we've reset\n    var resetValues = {};\n    // Check the rotate value of all axes and reset to 0\n    for (var i = 0; i < transformAxes.length; i++) {\n        var axis = transformAxes[i];\n        var key = \"rotate\" + axis;\n        // If this rotation doesn't exist as a motion value, then we don't\n        // need to reset it\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\n            continue;\n        hasRotate = true;\n        // Record the rotation and then temporarily set it to 0\n        resetValues[key] = child.getStaticValue(key);\n        child.setStaticValue(key, 0);\n    }\n    // If there's no rotation values, we don't need to do any more.\n    if (!hasRotate)\n        return;\n    // Force a render of this element to apply the transform with all rotations\n    // set to 0.\n    child.syncRender();\n    // Put back all the values we reset\n    for (var key in resetValues) {\n        child.setStaticValue(key, resetValues[key]);\n    }\n    // Schedule a render for the next frame. This ensures we won't visually\n    // see the element with the reset rotate value applied.\n    child.scheduleRender();\n}\n\n/**\n * @public\n */\nvar AnimateSharedLayout = /** @class */ (function (_super) {\n    tslib.__extends(AnimateSharedLayout, _super);\n    function AnimateSharedLayout() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A list of all the children in the shared layout\n         */\n        _this.children = new Set();\n        /**\n         * As animate components with a defined `layoutId` are added/removed to the tree,\n         * we store them in order. When one is added, it will animate out from the\n         * previous one, and when it's removed, it'll animate to the previous one.\n         */\n        _this.stacks = new Map();\n        /**\n         * Track whether the component has mounted. If it hasn't, the presence of added children\n         * are set to Present, whereas if it has they're considered Entering\n         */\n        _this.hasMounted = false;\n        /**\n         * Track whether we already have an update scheduled. If we don't, we'll run snapshots\n         * and schedule one.\n         */\n        _this.updateScheduled = false;\n        /**\n         * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender\n         */\n        _this.renderScheduled = false;\n        /**\n         * The methods provided to all children in the shared layout tree.\n         */\n        _this.syncContext = tslib.__assign(tslib.__assign({}, createBatcher()), { syncUpdate: function (force) { return _this.scheduleUpdate(force); }, forceUpdate: function () {\n                // By copying syncContext to itself, when this component re-renders it'll also re-render\n                // all children subscribed to the SharedLayout context.\n                _this.syncContext = tslib.__assign({}, _this.syncContext);\n                _this.scheduleUpdate(true);\n            }, register: function (child) { return _this.addChild(child); }, remove: function (child) { return _this.removeChild(child); } });\n        return _this;\n    }\n    AnimateSharedLayout.prototype.componentDidMount = function () {\n        this.hasMounted = true;\n    };\n    AnimateSharedLayout.prototype.componentDidUpdate = function () {\n        this.startLayoutAnimation();\n    };\n    AnimateSharedLayout.prototype.shouldComponentUpdate = function () {\n        this.renderScheduled = true;\n        return true;\n    };\n    AnimateSharedLayout.prototype.startLayoutAnimation = function () {\n        var _this = this;\n        /**\n         * Reset update and render scheduled status\n         */\n        this.renderScheduled = this.updateScheduled = false;\n        var type = this.props.type;\n        /**\n         * Update presence metadata based on the latest AnimatePresence status.\n         * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.\n         */\n        this.children.forEach(function (child) {\n            if (!child.isPresent) {\n                child.presence = Presence.Exiting;\n            }\n            else if (child.presence !== Presence.Entering) {\n                child.presence =\n                    child.presence === Presence.Exiting\n                        ? Presence.Entering\n                        : Presence.Present;\n            }\n        });\n        this.updateStacks();\n        /**\n         * Create a handler which we can use to flush the children animations\n         */\n        var handler = {\n            layoutReady: function (child) {\n                if (child.getLayoutId() !== undefined) {\n                    var stack = _this.getStack(child);\n                    stack.animate(child, type === \"crossfade\");\n                }\n                else {\n                    child.notifyLayoutReady();\n                }\n            },\n            parent: this.context.visualElement,\n        };\n        /**\n         * Shared layout animations can be used without the AnimateSharedLayout wrapping component.\n         * This requires some co-ordination across components to stop layout thrashing\n         * and ensure measurements are taken at the correct time.\n         *\n         * Here we use that same mechanism of schedule/flush.\n         */\n        this.children.forEach(function (child) { return _this.syncContext.add(child); });\n        this.syncContext.flush(handler);\n        /**\n         * Clear snapshots so subsequent rerenders don't retain memory of outgoing components\n         */\n        this.stacks.forEach(function (stack) { return stack.clearSnapshot(); });\n    };\n    AnimateSharedLayout.prototype.updateStacks = function () {\n        this.stacks.forEach(function (stack) { return stack.updateLeadAndFollow(); });\n    };\n    AnimateSharedLayout.prototype.scheduleUpdate = function (force) {\n        if (force === void 0) { force = false; }\n        if (!(force || !this.updateScheduled))\n            return;\n        /**\n         * Flag we've scheduled an update\n         */\n        this.updateScheduled = true;\n        /**\n         * Write: Reset transforms so bounding boxes can be accurately measured.\n         */\n        this.children.forEach(function (child) {\n            resetRotate(child);\n            if (child.shouldResetTransform())\n                child.resetTransform();\n        });\n        /**\n         * Read: Snapshot children\n         */\n        this.children.forEach(snapshotViewportBox);\n        /**\n         * Every child keeps a local snapshot, but we also want to record\n         * snapshots of the visible children as, if they're are being removed\n         * in this render, we can still access them.\n         *\n         * TODO: What would be better here is doing a single loop where we\n         * only snapshotViewportBoxes of undefined layoutIds and then one for each stack\n         */\n        this.stacks.forEach(function (stack) { return stack.updateSnapshot(); });\n        /**\n         * Force a rerender by setting state if we aren't already going to render.\n         */\n        if (force || !this.renderScheduled) {\n            this.renderScheduled = true;\n            this.forceUpdate();\n        }\n    };\n    AnimateSharedLayout.prototype.addChild = function (child) {\n        this.children.add(child);\n        this.addToStack(child);\n        child.presence = this.hasMounted ? Presence.Entering : Presence.Present;\n    };\n    AnimateSharedLayout.prototype.removeChild = function (child) {\n        this.scheduleUpdate();\n        this.children.delete(child);\n        this.removeFromStack(child);\n    };\n    AnimateSharedLayout.prototype.addToStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.add(child);\n    };\n    AnimateSharedLayout.prototype.removeFromStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.remove(child);\n    };\n    /**\n     * Return a stack of animate children based on the provided layoutId.\n     * Will create a stack if none currently exists with that layoutId.\n     */\n    AnimateSharedLayout.prototype.getStack = function (child) {\n        var id = child.getLayoutId();\n        if (id === undefined)\n            return;\n        // Create stack if it doesn't already exist\n        !this.stacks.has(id) && this.stacks.set(id, layoutStack());\n        return this.stacks.get(id);\n    };\n    AnimateSharedLayout.prototype.render = function () {\n        return (React__namespace.createElement(SharedLayoutContext.Provider, { value: this.syncContext }, this.props.children));\n    };\n    AnimateSharedLayout.contextType = MotionContext;\n    return AnimateSharedLayout;\n}(React__namespace.Component));\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var children = _a.children, config = tslib.__rest(_a, [\"children\"]);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = tslib.__assign(tslib.__assign({}, React.useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(function () { return config.isStatic; });\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    var transitionDependency = typeof config.transition === \"object\"\n        ? config.transition.toString()\n        : \"\";\n    var context = React.useMemo(function () { return config; }, [\n        transitionDependency,\n        config.transformPagePoint,\n    ]);\n    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion(_a) {\n    var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;\n    var _c = tslib.__read(React.useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1];\n    var loadedRenderer = React.useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        var renderer = features.renderer, loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    React.useEffect(function () {\n        if (isLazyBundle(features)) {\n            features().then(function (_a) {\n                var renderer = _a.renderer, loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict: strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\n/**\n * @public\n */\nvar domAnimation = tslib.__assign(tslib.__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\n/**\n * @public\n */\nvar domMax = tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutAnimations);\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = tslib.__read(React.useState(initial), 2), setLatest_1 = _a[1];\n        React.useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nfunction useOnChange(value, callback) {\n    React.useEffect(function () {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    React.useEffect(function () {\n        var subscriptions = values.map(function (value) { return value.onChange(handler); });\n        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };\n    });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    var value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    var updateValue = function () { return value.set(combineValues()); };\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, function () { return sync__default['default'].update(updateValue, false, true); });\n    return value;\n}\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    var numFragments = fragments.length;\n    function buildValue() {\n        var output = \"\";\n        for (var i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            var value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\nvar isCustomValueType = function (v) {\n    return typeof v === \"object\" && v.mix;\n};\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\nfunction transform() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var useImmediate = !Array.isArray(args[0]);\n    var argOffset = useImmediate ? 0 : -1;\n    var inputValue = args[0 + argOffset];\n    var inputRange = args[1 + argOffset];\n    var outputRange = args[2 + argOffset];\n    var options = args[3 + argOffset];\n    var interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    var transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], function (_a) {\n            var _b = tslib.__read(_a, 1), latest = _b[0];\n            return transformer(latest);\n        });\n}\nfunction useListTransform(values, transformer) {\n    var latest = useConstant(function () { return []; });\n    return useCombineMotionValues(values, function () {\n        latest.length = 0;\n        var numValues = values.length;\n        for (var i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config) {\n    if (config === void 0) { config = {}; }\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    var activeSpringAnimation = React.useRef(null);\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    React.useMemo(function () {\n        return value.attach(function (v, set) {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n            return value.get();\n        });\n    }, Object.values(config));\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\n    return value;\n}\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    var velocity = useMotionValue(value.getVelocity());\n    React.useEffect(function () {\n        return value.velocityUpdateSubscribers.add(function (newVelocity) {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nfunction createScrollMotionValues() {\n    return {\n        scrollX: motionValue(0),\n        scrollY: motionValue(0),\n        scrollXProgress: motionValue(0),\n        scrollYProgress: motionValue(0),\n    };\n}\nfunction setProgress(offset, maxOffset, value) {\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\nfunction createScrollUpdater(values, getOffsets) {\n    var update = function () {\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\n        // Set absolute positions\n        values.scrollX.set(xOffset);\n        values.scrollY.set(yOffset);\n        // Set 0-1 progress\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n    };\n    update();\n    return update;\n}\n\nvar getElementScrollOffsets = function (element) { return function () {\n    return {\n        xOffset: element.scrollLeft,\n        yOffset: element.scrollTop,\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\n    };\n}; };\n/**\n * Returns MotionValues that update when the provided element scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * This element must be set to `overflow: scroll` on either or both axes to report scroll offset.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useElementScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const ref = React.useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <Frame ref={ref}>\n *       <Frame scaleX={scrollYProgress} />\n *     </Frame>\n *   )\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const ref = useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <div ref={ref}>\n *       <motion.div style={{ scaleX: scrollYProgress }} />\n *     </div>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction useElementScroll(ref) {\n    var values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(function () {\n        var element = ref.current;\n        heyListen.invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n        if (!element)\n            return;\n        var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n        var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, { passive: true });\n        var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n        return function () {\n            scrollListener && scrollListener();\n            resizeListener && resizeListener();\n        };\n    }, []);\n    return values;\n}\n\nvar viewportScrollValues;\nfunction getViewportScrollOffsets() {\n    return {\n        xOffset: window.pageXOffset,\n        yOffset: window.pageYOffset,\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\n    };\n}\nvar hasListeners = false;\nfunction addEventListeners() {\n    hasListeners = true;\n    if (typeof window === \"undefined\")\n        return;\n    var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n    addDomEvent(window, \"scroll\", updateScrollValues, { passive: true });\n    addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\n * Returns MotionValues that update when the viewport scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\n * values as this breaks the browser's capability to accurately measure the page length.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useViewportScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <Frame scaleX={scrollYProgress} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\n * }\n * ```\n *\n * @public\n */\nfunction useViewportScroll() {\n    /**\n     * Lazy-initialise the viewport scroll values\n     */\n    if (!viewportScrollValues) {\n        viewportScrollValues = createScrollMotionValues();\n    }\n    useIsomorphicLayoutEffect(function () {\n        !hasListeners && addEventListeners();\n    }, []);\n    return viewportScrollValues;\n}\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nvar prefersReducedMotion;\nfunction initPrefersReducedMotion() {\n    prefersReducedMotion = motionValue(null);\n    if (typeof window === \"undefined\")\n        return;\n    if (window.matchMedia) {\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n        var setReducedMotionPreferences = function () {\n            return prefersReducedMotion.set(motionMediaQuery_1.matches);\n        };\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.set(false);\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !prefersReducedMotion && initPrefersReducedMotion();\n    var _a = tslib.__read(React.useState(prefersReducedMotion.get()), 2), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];\n    useOnChange(prefersReducedMotion, setShouldReduceMotion);\n    return shouldReduceMotion;\n}\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, tslib.__spreadArray([], tslib.__read(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    React.useEffect(controls.mount, []);\n    return controls;\n}\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import { Frame, useCycle } from \"framer\"\n *\n * export function MyComponent() {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <Frame\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @motion\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle() {\n    var items = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        items[_i] = arguments[_i];\n    }\n    var index = React.useRef(0);\n    var _a = tslib.__read(React.useState(items[index.current]), 2), item = _a[0], setItem = _a[1];\n    return [\n        item,\n        function (next) {\n            index.current =\n                typeof next !== \"number\"\n                    ? popmotion.wrap(0, items.length, index.current + 1)\n                    : next;\n            setItem(items[index.current]);\n        },\n    ];\n}\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * @library\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <Frame onTapStart={startDrag} />\n *     <Frame drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @motion\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nvar DragControls = /** @class */ (function () {\n    function DragControls() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    DragControls.prototype.subscribe = function (controls) {\n        var _this = this;\n        this.componentControls.add(controls);\n        return function () { return _this.componentControls.delete(controls); };\n    };\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    DragControls.prototype.start = function (event, options) {\n        this.componentControls.forEach(function (controls) {\n            controls.start(event.nativeEvent || event, options);\n        });\n    };\n    DragControls.prototype.updateConstraints = function (flush) {\n        if (flush === void 0) { flush = true; }\n        this.componentControls.forEach(function (controls) {\n            controls.updateConstraints();\n        });\n        flush && flushLayout();\n    };\n    return DragControls;\n}());\nvar createDragControls = function () { return new DragControls(); };\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * @library\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <Frame onTapStart={startDrag} />\n *     <Frame drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @motion\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nvar createObject = function () { return ({}); };\nvar stateVisualElement = visualElement({\n    build: function () { },\n    measureViewportBox: axisBox,\n    resetTransform: function () { },\n    restoreTransform: function () { },\n    removeValueFromRenderState: function () { },\n    render: function () { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance: function (_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable: function (element, _a) {\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n});\nvar useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n * @internal\n */\nfunction useAnimatedState(initialState) {\n    var _a = tslib.__read(React.useState(initialState), 2), animationState = _a[0], setAnimationState = _a[1];\n    var visualState = useVisualState({}, false);\n    var element = useConstant(function () {\n        return stateVisualElement({ props: {}, visualState: visualState }, { initialState: initialState });\n    });\n    React.useEffect(function () {\n        element.mount({});\n        return element.unmount();\n    }, []);\n    React.useEffect(function () {\n        element.setProps({\n            onUpdate: function (v) { return setAnimationState(tslib.__assign({}, v)); },\n        });\n    });\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\n        return animateVisualElement(element, animationDefinition);\n    }; });\n    return [animationState, startAnimation];\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nvar maxScale = 100000;\nvar invertScale = function (scale) {\n    return scale > 0.001 ? 1 / scale : maxScale;\n};\nvar hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * @motion\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @library\n *\n * ```jsx\n * function MyComponent() {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\n * }\n * ```\n *\n * @deprecated\n * @internal\n */\nfunction useInvertedScale(scale) {\n    var parentScaleX = useMotionValue(1);\n    var parentScaleY = useMotionValue(1);\n    var visualElement = useVisualElementContext();\n    heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    var scaleX = useTransform(parentScaleX, invertScale);\n    var scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX: scaleX, scaleY: scaleY };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.FramerTreeLayoutContext = FramerTreeLayoutContext;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.SharedLayoutContext = SharedLayoutContext;\nexports.addScaleCorrection = addScaleCorrection;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.batchLayout = batchLayout;\nexports.createBatcher = createBatcher;\nexports.createCrossfader = createCrossfader;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.flushLayout = flushLayout;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.snapshotViewportBox = snapshotViewportBox;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useIsPresent = useIsPresent;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useSpring = useSpring;\nexports.useTransform = useTransform;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.visualElement = visualElement;\n"],"names":["Object","defineProperty","exports","value","tslib","React","heyListen","styleValueTypes","popmotion","sync","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React__namespace","React__default","sync__default","createDefinition","propNames","isEnabled","props","some","name","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","layoutAnimation","loadFeatures","features","key","Component","LazyContext","createContext","strict","featureNames","numFeatures","length","MotionConfigContext","transformPagePoint","p","isStatic","MotionContext","useVisualElementContext","useContext","visualElement","PresenceContext","useConstant","init","ref","useRef","current","usePresence","context","isPresent","onExitComplete","register","id","useUniqueId","useEffect","counter","incrementId","LayoutGroupContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","visualState","createVisualElement","config","lazyContext","parent","presenceContext","layoutId","_a","layoutGroupId","undefined","useLayoutId","visualElementRef","renderer","__assign","presenceId","blockInitialAnimation","initial","setProps","isPresenceRoot","syncRender","animationState","animateChanges","notifyUnmount","isRefObject","prototype","hasOwnProperty","call","isVariantLabels","v","Array","isArray","isVariantLabel","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","variants","resolveVariant","getProps","forEachValue","getCurrent","velocity","getVelocity","getVelocity$1","checkIfControllingVariants","animate","start","whileHover","whileDrag","whileTap","whileFocus","checkIfVariantNode","Boolean","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createMotionComponent","preloadedFeatures","useRender","useVisualState","forwardRef","externalRef","i","name_1","push","createElement","useFeatures","Fragment","Provider","useCallback","instance","mount","unmount","useMotionRef","createMotionProxy","createConfig","customMotionComponentConfig","componentCache","Map","Proxy","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","valueScaleCorrection","addScaleCorrection","correctors","transformAxes","transformProps","sortTransformProps","a","b","operationKey","axesKey","transformPropSet","Set","isTransformProp","transformOriginProps","isTransformOriginProp","isForcedMotionValue","layout","isMotionValue","translateAlias","x","y","z","transformPerspective","isCSSVariable$1","startsWith","getValueAsType","type","transform","int","number","Math","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","projection","layoutState","options","transformTemplate","buildProjectionTransform","buildProjectionTransformOrigin","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","isHydrated","correctedValue","process","applyTo","num","deltaFinal","treeScale","_b","transformIsDefault","_c","enableHardwareAcceleration","_d","allowTransformNone","transformString","sort","transformHasZ","numTransformKeys","trim","buildTransform","buildTransformOrigin","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","emotionIsPropValid_1","calcOrigin$1","origin","offset","progressToPixels","progress","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","__rest","attrs","dimensions","totalPathLength","calcSVGTransformOrigin","totalLength","spacing","useDashCase","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","CAMEL_CASE_PATTERN","camelToDash","str","replace","toLowerCase","renderHTML","element","setProperty","camelCaseAttributes","renderSVG","renderState","setAttribute","scrapeMotionValuesFromProps$1","newValues","scrapeMotionValuesFromProps","toUpperCase","isAnimationControls","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","scrapeMotionValues","values","motionValues","isControllingVariants","isVariantNode","variantToSet","resolved","transitionEnd","transition","svgMotionConfig","getBBox","getBoundingClientRect","tagName","getTotalLength","AnimationType","htmlMotionConfig","createDomMotionConfig","baseConfig","addDomEvent","eventName","handler","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","eventHandler","listener","button","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","makeRenderlessComponent","hook","gestureAnimations","onTap","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","getInstance","onPointerCancel","pipe","Focus","onHoverStart","onHoverEnd","shallowCompare","next","prev","prevLength","secondsToMilliseconds","seconds","easingLookup","linear","easeIn","easeInOut","easeOut","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","bounceIn","bounceInOut","bounceOut","easingDefinitionToFunction","invariant","__read","x1","y1","x2","y2","cubicBezier","isEasingArray","ease","isAnimatable","complex","underDampedSpring","stiffness","damping","restDelta","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","duration","keyframes","defaultTransitions","backgroundColor","color","getDefaultTransition","valueKey","transitionFactory","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","filter","WebkitFilter","getDefaultValueType","getAnimatableNone","defaultValueType","legacyRepeatWarning","getPopmotionAnimationOptions","__spreadArray","from","hydrateKeyframes","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","isTransitionDefined","times","yoyo","flip","loop","map","warning","convertTransitionToAnimationOptions","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","startAnimation","onComplete","delayTimer","controls","valueTransition","isTargetAnimatable","isOriginAnimatable","onUpdate","inertia","stop","getAnimation","getDelayFromTransition","setTimeout","clearTimeout","isNumericalString","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","this","subscriptions","add","_this","notify","c","numSubscriptions","getSize","clear","isFloat","isNaN","MotionValue","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","render","getFrameData","delta","timestamp","postRender","scheduleVelocityCheck","velocityCheck","hasAnimated","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","getPrevious","velocityPerSecond","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","setVariants","variantLabels","reverse","variant","getVariant","variantChildren","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","animateVisualElement","notifyAnimationStart","animations","animateVariant","all","resolvedDefinition","animateTarget","notifyAnimationComplete","transitionOverride","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_e","_f","animationTypeState","getState","valueTarget","shouldBlockAnimation","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","_loop_1","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","variantsHaveChanged","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","apply","fallbackAnimation_1","fallbackTarget","getBaseTarget","shouldAnimate","isAnimated","setAnimateFunction","makeAnimator","subscribe","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","cancelSync","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","noop","any","convertBoundingBoxToAxisBox","min","max","axisBox","zeroDelta","translate","originPoint","eachAxis","clampProgress","clamp","isNear","maxDistance","calcLength","axis","updateAxisDelta","updateBoxDelta","defaultOrigin","calcRelativeAxis","relative","applyConstraints","elastic","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","getBoundingBox","topLeft","bottomRight","transformBoundingBox","compareByDepth","depth","isProjecting","shouldResetTransform","collectProjectingAncestors","ancestors","updateLayoutMeasurement","box","getLayoutState","notifyBeforeLayoutMeasure","measureViewportBox","layoutCorrected","notifyLayoutMeasure","prevViewportBox","rebaseProjectionTarget","snapshotViewportBox","calcRelativeOffsetAxis","calcRelativeOffset","isDraggable","_dragX","resetAxis","originAxis","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","applyAxisTransforms","final","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","applyBoxTransforms","finalBox","removePointDelta","removeAxisTransforms","removeAxisDelta","removeBoxTransforms","unresolvedJobs","pushJob","stack","job","pointer","batchLayout","flushLayout","reads","writes","setRead","setWrite","numStacks","executeJob","lastPointerEvent","elementDragControls","WeakMap","VisualElementDragControls","isDragging","currentDirection","constraints","hasMutatedConstraints","cursorProgress","openGlobalLock","panSession","enableLayoutProjection","originEvent","snapToCursor","stopMotion","initialPoint","getViewportPointFromEvent","cancelLayout","read","write","children","addChild","collectProjectingChildren","tree","hasManuallySetCursorOrigin","isLayoutDrag","lockProjectionTarget","resetTransform","restoreTransform","getAxisMotionValue","isExternalDrag","scheduleUpdateLayoutProjection","axisValue","flushSync","preRender","resolveDragConstraints","dragPropagation","onDragStart","dragDirectionLock","lockThreshold","direction","abs","getCurrentDirection","onDirectionLock","updateAxis","onDrag","dragConstraints","resolveRefConstraints","layoutBox","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","convertAxisBoxToBoundingBox","cancelDrag","unlockProjectionTarget","animateDragEnd","onDragEnd","shouldDrag","length_1","center","updateAxisMotionValue","updateVisualElementAxis","nextValue","axisLayout","axisLength","axisProgress","calcConstrainedMinPoint","setProjectionTargetAxis","_g","dragMomentum","remainingProps","dragKey","_dragY","dragTransition","isRelative","projectionParent","getProjectionParent","getLatestValues","convertToRelativeProjection","relativeConstraints_1","targetFinal","momentumAnimations","bounceStiffness","bounceDamping","timeConstant","startAxisValueAnimation","startLayoutAnimation","onDragTransitionEnd","stopLayoutAnimation","currentValue","boxProgress","sourceLength","targetLength","updateConstraints","calcPositionFromProgress","onReady","stopPointerListener","dragListener","stopResizeListener","stopLayoutUpdateListener","onLayoutUpdate","prevDragCursor","Presence","VisibilityAction","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","groupDragControls","dragControls","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","match","exec","parseCSSVariable","token","fallback","getComputedStyle","getPropertyValue","pixelsToPercent","pixels","varToken","borderCorrectionDefinition","latest","_layoutState","defaultScaleCorrectors","boxShadow","original","containsCSSVariables","cssVariables","shadow","template","createTransformer","xScale","yScale","averageScale","output","i_1","cssVariable","_super","arguments","frameTarget","currentAnimationTarget","stopAxisAnimation","isAnimatingTree","originBox","targetBox","visibilityAction","shouldStackAnimate","prevParent","safeToRemove","prevId","nextId","prevParentViewportBox","parentLayout","getLayoutId","isProvidedCorrectDataForRelativeSharedLayout","boxHasMoved","isZeroBox","axisIsEqual","isTargetLocked","animateAxis","setVisibility","Show","notifyLayoutAnimationComplete","__extends","componentDidMount","animateMotionValue","unsubLayoutReady","layoutSafeToRemove","componentWillUnmount","layoutProgress","getProjectionAnimationProgress","frame","tweenAxis","unsubscribeProgress","layoutTransition","defaultLayoutTransition","zeroAxis","defaultHandler","layoutReady","notifyLayoutReady","createBatcher","queue","flush","order","presence","Present","assignProjectionToSnapshot","SharedLayoutContext","FramerTreeLayoutContext","isSharedLayout","forceUpdate","Measure","syncLayout","framerSyncLayout","onUnmount","remove","getSnapshotBeforeUpdate","syncUpdate","componentDidUpdate","layoutAnimations","createLayoutState","deltaTransform","zeroLayout","buildLayoutProjectionTransform","latestTransform","identityProjection","buildLayoutProjectionTransformOrigin","names","updateLayoutDeltas","treePath","treeLength","node","applyTreeDeltas","FlatTree","isDirty","treeType","build","renderInstance","readValueFromInstance","removeValueFromRenderState","unsubscribeFromLeadVisualElement","crossfader","projectionTargetProgress","removeFromVariantTree","lifecycles","managers","propSubscriptions","clearAllListeners","manager","updatePropListeners","on","propListener","args","_i","createLifecycles","leadProjection","leadLatestValues","hasViewportBoxUpdated","valueSubscriptions","prevMotionValues","baseTarget","isProjectionReady","triggerBuild","valuesToRender","crossfadedValues","getCrossfadeState","notifyUpdate","updateTreeLayoutProjection","layoutTree","fireUpdateLayoutProjection","initialMotionValues","path","isVisible","isMounted","newInstance","pointTo","addVariantChild","updateLayoutProjection","closestVariantNode","getClosestVariantNode","other","getStaticValue","setStaticValue","visibility","scheduleRender","canMutate","removeValue","removeOnChange","latestValue","removeOnRenderRequest","bindToMotionValue","defaultValue","newProps","prevValue","existingValue","updateMotionValuesFromProps","startAtParent","context_1","numVariantProps","variantProps","setCrossfader","newCrossfader","relativeTarget","withTransform","viewportBox","notifySetAxisTarget","force","shouldRebase","relativeOffset","setCurrentViewportBox","notifyLayoutUpdate","prevTreeScaleX","prevTreeScaleY","prevDeltaTransform","notifyViewportBoxUpdate","fireResolveRelativeTargetBox","foundParent","ancestor","resolveRelativeTargetBox","relativeParent","parentProjection","calcRelativeBox","_layoutResetTransform","newLead","onSetAxisTarget","onLayoutAnimationComplete","Entering","BoundingBoxDimension","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","removedTransforms","removeNonTranslationalTransform","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","convertChangedValueTypes","parseDomVariant","HTMLElement","resolveCSSVariables","unitConversion","htmlConfig","domElement","defaultType","computedStyle","compareDocumentPosition","mutableState","parsed","isProjectionTranform","htmlVisualElement","svgVisualElement","getAttribute","_element","createDomVisualElement","featureBundle","motion","m","getPresenceId","PresenceChild","presenceAffectsLayout","presenceChildren","newChildrenMap","childId","allComplete","isComplete","_","getChildKey","createCrossfader","lead","follow","crossfadeOpacity","preserveFollowOpacity","prevOptions","leadState","followState","finalCrossfadeFrame","prevUpdate","startCrossfadeAnimation","hasUpdated","updateCrossfade","latestLeadValues","latestFollowValues","prevValues","leadTargetOpacity","followTargetOpacity","easeCrossfadeIn","easeCrossfadeOut","hasFollowElement","numBorders","borderLabel","borders","followRadius","getRadius","leadRadius","mixColor","mixValues","fromLead","toLead","initialProgress","reset","setOptions","newOptions","compress","easing","radiusName","layoutStack","leadIsExiting","prevState","needsCrossfadeAnimation","getLead","updateSnapshot","clearSnapshot","updateLeadAndFollow","Exiting","shouldCrossfade","getFollowLayout","AnimateSharedLayout","stacks","hasMounted","updateScheduled","renderScheduled","syncContext","scheduleUpdate","removeChild","shouldComponentUpdate","updateStacks","getStack","hasRotate","resetValues","resetRotate","addToStack","removeFromStack","contextType","isLazyBundle","domAnimation","domMax","useMotionValue","setLatest_1","useState","useOnChange","useCombineMotionValues","combineValues","updateValue","unsubscribe","useMultiOnChange","getMixer","isCustomValueType","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","interpolate","mixer","useTransform","input","inputRangeOrTransformer","transformer","useListTransform","numValues","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","setProgress","maxOffset","createScrollUpdater","getOffsets","xOffset","yOffset","xMaxOffset","yMaxOffset","viewportScrollValues","getElementScrollOffsets","scrollLeft","scrollTop","scrollWidth","offsetWidth","scrollHeight","offsetHeight","getViewportScrollOffsets","pageXOffset","pageYOffset","document","body","clientWidth","innerWidth","clientHeight","innerHeight","prefersReducedMotion","hasListeners","animationControls","pendingAnimations","subscribers","animations_1","setValues","DragControls","componentControls","nativeEvent","createDragControls","createObject","stateVisualElement","_state","initialState","invertScale","hasWarned","AnimatePresence","exitBeforeEnter","forceRender","unloadingRef","forcedRenderCount","setForcedRenderCount","useForceUpdate","layoutContext","filteredChildren","filtered","Children","isValidElement","onlyElements","presentChildren","allChildren","exiting","updateChildLookup","childrenToRender","presentKeys","targetKeys","numPresent","insertionIndex","removeIndex","findIndex","presentChild","cloneElement","LazyMotion","setIsLoaded","loadedRenderer","loadedFeatures","MotionConfig","transitionDependency","toString","createDomMotionComponent","useAnimation","useCycle","items","setItem","wrap","useDeprecatedAnimatedState","setAnimationState","animationDefinition","useDeprecatedInvertedScale","parentScaleX","parentScaleY","useDragControls","useElementScroll","updateScrollValues","scrollListener","passive","resizeListener","useIsPresent","useMotionTemplate","fragments","numFragments","useReducedMotion","matchMedia","motionMediaQuery_1","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","shouldReduceMotion","setShouldReduceMotion","useSpring","activeSpringAnimation","useVelocity","newVelocity","useViewportScroll","addEventListeners"],"sourceRoot":""}